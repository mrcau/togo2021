[{"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\index.js":"1","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\firebase.js":"2","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\App.js":"3","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx":"4","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\Scamper.jsx":"5","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\loginModal\\LoginModal.jsx":"6","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx":"7","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytool.jsx":"8","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\authTable\\Atable.jsx":"9","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\togo\\Togo.jsx":"10","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Todo.jsx":"11","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mypage\\Mypage.jsx":"12","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\placeholder.js":"13","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\ScamperReport.jsx":"14","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Toolrow.jsx":"15","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Itemrow.jsx":"16"},{"size":521,"mtime":1610929896720,"results":"17","hashOfConfig":"18"},{"size":8808,"mtime":1612753064339,"results":"19","hashOfConfig":"18"},{"size":5018,"mtime":1612741907748,"results":"20","hashOfConfig":"18"},{"size":5847,"mtime":1612665956984,"results":"21","hashOfConfig":"18"},{"size":19673,"mtime":1612659846481,"results":"22","hashOfConfig":"18"},{"size":4446,"mtime":1612505599311,"results":"23","hashOfConfig":"18"},{"size":1040,"mtime":1612659846468,"results":"24","hashOfConfig":"18"},{"size":2673,"mtime":1612397495087,"results":"25","hashOfConfig":"18"},{"size":7523,"mtime":1612748790314,"results":"26","hashOfConfig":"18"},{"size":940,"mtime":1612137918502,"results":"27","hashOfConfig":"18"},{"size":2458,"mtime":1612397495157,"results":"28","hashOfConfig":"18"},{"size":2315,"mtime":1612753728525,"results":"29","hashOfConfig":"18"},{"size":2144,"mtime":1612659846513,"results":"30","hashOfConfig":"18"},{"size":1635,"mtime":1612659846487,"results":"31","hashOfConfig":"18"},{"size":2015,"mtime":1612406311001,"results":"32","hashOfConfig":"18"},{"size":1483,"mtime":1612397495148,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"muhfwc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\index.js",[],["71","72"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\firebase.js",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\App.js",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx",["73"],"import './leftMenu.css';\r\nimport { Avatar,  IconButton } from '@material-ui/core';\r\nimport { BatteryCharging20, BatteryCharging50, BatteryCharging80, BatteryChargingFull, PhotoCamera } from '@material-ui/icons';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport {  Link, useHistory } from 'react-router-dom';\r\nimport mime from 'mime-types';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\n\r\nfunction LeftMenu({ fireApp, user, photo, setPhoto, logout }) {\r\nconst [level, setLevel] = useState(0);\r\n\r\nuseEffect(() => {\r\n  fireApp.onAuth((e) => {\r\n    if (e) {fireApp.authSync('auth',e.uid,(p)=>setLevel(p))}\r\n    else { console.log('no-User') }\r\n  })\r\n}) \r\n\r\n  const upLoad = (e) => {\r\n    const file = e.target.files[0];\r\n    const metaData = { contentType: mime.lookup(file.name) }\r\n    fireApp.imgUpload(user.uid, file, metaData, (e) => setPhoto(e));\r\n  }\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"leftMenu\">\r\n\r\n      {photo ? <div className=\"imgBg\" style={{ backgroundImage: `url(\"${photo}\")` }} />\r\n        : <Avatar style={{ width: '120px', height: '120px' }} />}\r\n      {Object.keys(user).length>0 &&\r\n        <input accept=\"image/*\" style={{ display: 'none' }} id=\"photoFile\" type=\"file\" onChange={upLoad} />\r\n      }\r\n      <label htmlFor=\"photoFile\"> \r\n        <IconButton size=\"small\" component=\"span\"> <PhotoCamera /> </IconButton>\r\n      </label>\r\n      {user.uid&&<div style={{width:'100%'}}>\r\n        <button className=\"btnLogout\" onClick={logout} > 로그아웃 </button>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/mypage\"><div className=\"icon\"> My Page</div></Link> </div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/todo\"><div className=\"icon\">  My Todo</div></Link></div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/mytool\"><div className=\"icon\">  My Tool</div></Link></div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/atable\"><div className=\"icon\">  My users</div></Link></div>\r\n      </div>}\r\n      <hr style={{width:'90%',border:'dashed 1px gray'}} />\r\n    \r\n      <div className=\"btntitle\" disabled > 디자인씽킹</div>\r\n\r\n        <Accordion  style={{width:'100%'}}>\r\n          <Card className={\"card\"}>\r\n            <Accordion.Toggle as={Card.Header} className=\"accordion\" eventKey=\"0\">\r\n            <BatteryCharging20/> 문제 찾기 \r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse  eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 관찰하기 </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 페르소나 </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 5Why질문 </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"1\">\r\n            <BatteryCharging50/> 데이터 분석\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 유투브</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 상권분석</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 구글</Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"2\">\r\n            <BatteryCharging80/>  창의적발상\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 브레인스톰</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 만다라트</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" onClick={() => history.push('/scamper')}> - 스캠퍼</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 트리즈</Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"3\">\r\n            <BatteryChargingFull/> 문제해결\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 프로토타입</Card.Body>\r\n            </Accordion.Collapse>            \r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"4\">\r\n            🚀 스타트업\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - SWOT분석</Card.Body>\r\n            </Accordion.Collapse>            \r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 식스분석</Card.Body>\r\n            </Accordion.Collapse>            \r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 린캔버스</Card.Body>\r\n            </Accordion.Collapse>            \r\n          </Card>\r\n        </Accordion>\r\n        \r\n        \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(LeftMenu);","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\Scamper.jsx",["74","75"],"import { Badge, IconButton, Switch } from '@material-ui/core';\r\nimport {  DeleteForever,   MenuSharp, ThumbUp } from '@material-ui/icons';\r\nimport React, { memo, useEffect,  useRef, useState } from 'react';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport './scamper.css';\r\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\r\nimport ScamperReport from './ScamperReport';\r\nimport Swal from 'sweetalert2';\r\nimport placeholder from './placeholder';\r\n\r\nfunction Scamper({ fireApp, user, userName }) {\r\n  const folder = \"scamper\";\r\n  const roomSubstr = 6;\r\n  const Swal = require('sweetalert2');\r\n  \r\n  const aTitle = useRef();\r\n  const bName = useRef();\r\n  const input3 = useRef();\r\n  const input4 = useRef();\r\n  const input5 = useRef();\r\n  const input6 = useRef();\r\n  const scamperS = useRef();\r\n  const scamperC = useRef();\r\n  const scamperA = useRef();\r\n  const scamperM = useRef();\r\n  const scamperP = useRef();\r\n  const scamperE = useRef();\r\n  const scamperR = useRef();\r\n  const roomERef = useRef();\r\n  const formRef = useRef();\r\n  const noticeRef = useRef();\r\n  const titleRef = useRef();\r\n  const drawerRef = useRef();\r\n  const backRef = useRef();\r\n\r\n  const [data, setdata] = useState({});\r\n  const [room, setRoom] = useState({});\r\n  const [roomName, setroomName] = useState('');\r\n  const [roomUid, setRoomUid] = useState('');\r\n  const [level, setLevel] = useState(0);\r\n  const [video, setVideo] = useState('');\r\n  const [notice, setNotice] = useState('');\r\n  const [state, setState] = useState({ triz:false,  Switch7:true });\r\n  const placeData = state.triz ? placeholder[1] : placeholder[0];\r\n \r\n  //입장중\r\n  const [door, setDoor] = useState('입장')\r\n  const [report, setReport] = useState(false);\r\n  \r\n   //데이터싱크 \r\n  useEffect(() => {\r\n    fireApp.onAuth((e) => {\r\n      const cf = {\r\n        f1: (p) => { setdata(p) },\r\n        f2: () => { setdata({}) },\r\n        f3: (p) => { setRoom(p) },\r\n        f4: () => { setRoom({}) },\r\n      }\r\n      if (e && report===false) {\r\n        const roomUid = e.uid.substr(0, roomSubstr);\r\n        setRoomUid(e.uid.substr(0, roomSubstr));\r\n        fireApp.dataSync(folder, roomName, cf);\r\n        fireApp.roomSync(folder, roomUid, cf);\r\n        fireApp.authSync('auth',e.uid,(p)=>setLevel(p))\r\n      }\r\n      else {\r\n        if(report===false||!roomName){return}\r\n       const cf = {\r\n          f1: (p) => { setdata(p) },\r\n          f2: () => { setdata({}) },\r\n          f3: (p) => { setRoom(p) },\r\n          f4: () => { setRoom({}) },\r\n        }\r\n       if(report && roomName){\r\n        fireApp.dataSyncB(folder, roomName, cf);\r\n       }\r\n      }\r\n    })\r\n  }, [roomName,fireApp,report]);\r\n  \r\n  //수업자료와 공지사항 싱크\r\n  useEffect(() => {    \r\n    if(roomName&&!report){ \r\n      fireApp.videoSync(folder,roomName,'See',(p)=>{setVideo(p); })\r\n      fireApp.videoSync(folder,roomName,'Tok',(p)=>{\r\n        setNotice(p); \r\n        titleRef.current.classList.add(\"noticeFly\");\r\n        setTimeout(()=>{titleRef.current.classList.remove(\"noticeFly\")},1000)\r\n      })\r\n    }\r\n  },[roomName,fireApp,report]);\r\n  \r\n    // 좋아요\r\n    const [Switch0, setSwitch0] = useState(true);\r\n    const [Switch1, setSwitch1] = useState(true);\r\n    const [Switch2, setSwitch2] = useState(true);\r\n    const [Switch3, setSwitch3] = useState(true);\r\n    const [Switch4, setSwitch4] = useState(true);\r\n    const [Switch5, setSwitch5] = useState(true);\r\n    const [Switch6, setSwitch6] = useState(true);\r\n    const [Switch7, setSwitch7] = useState(true);\r\n    \r\n    const goodPlus = (goodNum,Switch,setSwitch) => {\r\n      console.log(goodNum,Switch,roomName,report)\r\n        if(data[goodNum]===undefined){data[goodNum]=0}\r\n        if(roomName){\r\n      Switch ? data[goodNum]++ : data[goodNum]--;\r\n      setSwitch(!Switch);\r\n      fireApp.goodUp(folder, roomName,goodNum,data[goodNum]);\r\n      }\r\n    }\r\n    \r\n    const goodPlus2 = (goodNum,Switch,setSwitch) => {\r\n      if(roomName){\r\n        Switch ? data[goodNum]++ : data[goodNum]--;\r\n        setSwitch(!Switch);\r\n      fireApp.goodUpB(folder, roomName,goodNum,data[goodNum]);\r\n      }\r\n    }\r\n    //오른쪽 모달 핸들링\r\n    const moveModal = () => {\r\n      drawerRef.current.classList.add(\"moveDrawer\");\r\n      backRef.current.classList.remove(\"backNone\");    \r\n    }\r\n    const moveModal2 = () => {\r\n      drawerRef.current.classList.remove(\"moveDrawer\");\r\n      backRef.current.classList.add(\"backNone\");    \r\n    }\r\n      //스위치 핸들링\r\n    const handleChange = (event) => {\r\n      setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n  \r\n  \r\n  //모달창3\r\n  const fire = () => {Swal.fire({html:video, width:'90%'})}\r\n  // 자료입력 모달\r\n  const fireInsert = async(e)=>{\r\n    e.preventDefault();\r\n    const { value: text } = await Swal.fire({\r\n      input: 'textarea',\r\n      inputLabel: '참고자료',\r\n      inputPlaceholder: '이곳에 자료를 입력해주세요.',\r\n      inputAttributes: {'aria-label': 'Type your message here'},\r\n      showCancelButton: true\r\n    })\r\n    if (text) {\r\n      Swal.fire(text)\r\n    fireApp.videoSave(folder, user.uid,'See', text);\r\n    }\r\n  }\r\n\r\n  let good =[data.good0,data.good1,data.good2,data.good3,data.good4,\r\n            data.good5,data.good6,data.good7]\r\n\r\n  // 방생성\r\n  const createRoom = () => {\r\n    const num = Date.now().toString().substr(9);\r\n    const newRoom = roomUid + num;\r\n    setroomName(newRoom);\r\n    const data = {scamS:'',scamC:'',scamA:'',scamM:'',scamP:'',scamE:'',scamR:'',aTitle:'',bName: '',input3: '', \r\n    input4: '',input5: '',input6: '',  good0:0, good1:0, good2:0, good3:0, good4:0, good5:0, good6:0, good7:0,}\r\n    const roomget = fireApp.roomGet(folder,roomUid)\r\n    roomget < 8 && \r\n    fireApp.roomSave(folder, newRoom, data)\r\n  }\r\n\r\n// notice 저장 - 공지 보내기\r\n  const noticeUp = (e) => {\r\n    e.preventDefault();\r\n    const data = noticeRef.current.value;\r\n    fireApp.videoSave(folder, user.uid,'Tok', data)\r\n    noticeRef.current.value='';\r\n    \r\n  }\r\n  //scamper 글 데이터 저장, 방개수 6개 이하일때만 데이터 저장\r\n  const onSubmit = () => {\r\n    if (roomName!==roomERef.current.value||roomERef.current.value===''||report) { return }\r\n    const data = {\r\n      aTitle: aTitle.current.value || '',\r\n      bName: bName.current.value || '',\r\n\r\n      input3: input3.current.value || '',\r\n      input4: input4.current.value || '',\r\n      input5: input5.current.value || '',\r\n      input6: input6.current.value || '',\r\n      scamS: scamperS.current.value || '',\r\n      scamC: scamperC.current.value || '',\r\n      scamA: scamperA.current.value || '',\r\n      scamM: scamperM.current.value || '',\r\n      scamP: scamperP.current.value || '',\r\n      scamE: scamperE.current.value || '',\r\n      scamR: scamperR.current.value || '',\r\n    }    \r\n    const roomUid =  roomERef.current.value.substr(0,roomSubstr)\r\n    fireApp.dataUp(folder, roomName, data)\r\n  }\r\n   // 보고서 제출\r\n   const btnInput = (e) => {\r\n    e.preventDefault();\r\n    const today = new Date().toLocaleDateString().substr(5);\r\n    // const id = Date.now();\r\n    if (roomName!==roomERef.current.value||roomERef.current.value==='') { return }\r\n    const data = {\r\n      aTitle: aTitle.current.value || '',\r\n      bName: bName.current.value || '',\r\n      cDate : today,\r\n      input3: input3.current.value || '',\r\n      input4: input4.current.value || '',\r\n      input5: input5.current.value || '',\r\n      input6: input6.current.value || '',\r\n      scamS: scamperS.current.value || '',\r\n      scamC: scamperC.current.value || '',\r\n      scamA: scamperA.current.value || '',\r\n      scamM: scamperM.current.value || '',\r\n      scamP: scamperP.current.value || '',\r\n      scamE: scamperE.current.value || '',\r\n      scamR: scamperR.current.value || '',\r\n      good7:0,\r\n      roomName:roomName\r\n    }\r\n    const roomUid =  roomERef.current.value.substr(0,roomSubstr);\r\n    const roomId = roomUid+'REPORT';\r\n    fireApp.reportSave(folder, roomId, roomName, data);\r\n  }\r\n\r\n  // input roomName 초기화\r\n  const roomNameReset=() => {roomERef.current.value=''; }\r\n\r\n  // roomName.substr(0,6) 방입장\r\n    const enterRoom = () => {\r\n    const roomUid =  roomERef.current.value.substr(0,roomSubstr)\r\n    const currentRoom = roomERef.current.value;\r\n    const roomGet=()=>{\r\n      if(roomERef.current.value.length !== 10 || !roomUid){return}\r\n      if(roomERef.current.value.length === 10){\r\n       setroomName(currentRoom);\r\n       setDoor('입장중');\r\n       setReport(false);\r\n      }else{return}\r\n    }\r\n      const cf = {\r\n        f1: (p) => { setdata(p) },\r\n        f2: () => { setdata({}) },\r\n        f3: (p) => { setRoom(p) },\r\n        f4: () => { setRoom({}) },\r\n      }\r\n\r\n    fireApp.roomUser(folder,roomUid,roomGet);\r\n    fireApp.dataSync(folder, currentRoom, cf);\r\n    }\r\n\r\n  // 관리자 방입장\r\n  const adminEnter = (e) => {\r\n    const room = e.currentTarget.textContent;\r\n    const roomname = roomUid +room;\r\n    setroomName(roomUid +room);\r\n    roomERef.current.value =roomname;     \r\n    setReport(false); \r\n    setSwitch0(true); setSwitch1(true); \r\n    setSwitch2(true); setSwitch3(true); \r\n    setSwitch4(true); setSwitch5(true); \r\n    setSwitch6(true);\r\n  }\r\n\r\n\r\n  // Input 초기화\r\n  // const inputReset = () => {   \r\n  //   const data = {\r\n  //     scamS: scamperS.current.value = '',\r\n  //     scamC: scamperC.current.value = '',\r\n  //     scamA: scamperA.current.value = '',\r\n  //     scamM: scamperM.current.value = '',\r\n  //     scamP: scamperP.current.value = '',\r\n  //     scamE: scamperE.current.value = '',\r\n  //     scamR: scamperR.current.value = '',\r\n  //   }\r\n  //   fireApp.dataUp(folder, roomName, data)\r\n  // }\r\n\r\n // 아이템 삭제\r\n  const dataDel = () => {\r\n    if (roomName!==roomERef.current.value||roomERef.current.value==='') { return }\r\n    fireApp.dataDel(folder,roomName);        \r\n    aTitle.current.value = '';\r\n    bName.current.value = '';\r\n    input3.current.value = '';\r\n    input4.current.value = '';\r\n    input5.current.value = '';\r\n    input6.current.value = '';\r\n    roomERef.current.value = '';\r\n    scamperS.current.value = '';\r\n    scamperC.current.value = '';\r\n    scamperA.current.value = '';\r\n    scamperM.current.value = '';\r\n    scamperP.current.value = '';\r\n    scamperE.current.value = '';\r\n    scamperR.current.value = '';\r\n  } \r\n\r\n//titleRef.current.classList.add(\"noticeFly\");\r\n  return (\r\n    <div className=\"scamper\" >     \r\n\r\n    <div className=\"drawer\" ref={drawerRef}>\r\n     <ScamperReport fireApp={fireApp} user={user} folder={folder} setroomName={setroomName} roomNameReset={roomNameReset}\r\n      roomName={roomName} setReport={setReport} drawerRef={drawerRef} \r\n      moveModal2={moveModal2} setSwitch7={setSwitch7} report={report} /> \r\n    </div>\r\n    <div className=\"drawerback backNone\" ref={backRef} onClick={moveModal2}></div>\r\n       \r\n      {level>0 && \r\n        <form className=\"adimBar\">\r\n          <button className=\"enterBtn\"  onClick={noticeUp}><AddCommentIcon/></button> \r\n          <input type=\"text\" className=\"enterInput\" placeholder=\"전달사항\" ref={noticeRef} />\r\n          <button className=\"enterBtn\"  style={{width:'30px'}} onClick={fireInsert}><YouTubeIcon/></button> \r\n        </form>\r\n      }\r\n      {level>0 &&\r\n        <div className=\"adimBar\">\r\n          <div> <button className=\"enterBtn\" onClick={createRoom} style={{fontSize:'12px'}}>개설</button> </div>\r\n          <div className=\"enterNumber\" style={{fontSize:'small'}}>{room && Object.keys(room).map((e) =>\r\n              <button key={e} className=\"btnRoom\" onClick={adminEnter} >{e}</button>) }\r\n          </div>\r\n        </div>\r\n      }\r\n      <div className=\"s-header\">\r\n        <div className=\"enterWrap\" >\r\n          <button className=\"enterBtn\" onClick={enterRoom} style={{fontSize:'12px'}} >{door}</button>\r\n          <input type=\"text\" className=\"enterInput roomnum\" placeholder=\"방번호\" style={{width:'85px'}} ref={roomERef} />\r\n        </div>\r\n        {level>0 && <button className=\"btnRoomDel\" style={{margin:'0'}} onClick={dataDel}><DeleteForever /></button>  }\r\n\r\n          {/* 스위치호출 */}\r\n        <div className=\"enterTitle\" >\r\n          <span style={{fontSize:'14px',fontWeight:'900'}}>SCAMPER </span>\r\n          <Switch checked={state.triz} name=\"triz\" onChange={handleChange} size=\"small\" \r\n          color=\"default\" />  \r\n          <span style={{fontSize:'14px',fontWeight:'900'}}> TRIZ</span>\r\n        </div>    \r\n\r\n        <div style={{ width: '100px',display:'flex',justifyContent:'flex-end' }}>             \r\n          <button style={{width:'30px'}}  onClick={fire}>\r\n             <VoiceChatIcon fontSize='small' />\r\n          </button>\r\n\r\n          <button style={{width:'30px'}} onClick={moveModal}> \r\n            <MenuSharp />\r\n          </button> \r\n        </div>        \r\n      </div>\r\n\r\n        {/* <div className=\"noticeTitle\" > 공지 </div> */}\r\n      <div className=\"s-header noticeHeader\" ref={titleRef}>\r\n        <div className=\"enterTitle\" >{notice}</div>  \r\n      </div>\r\n      \r\n\r\n        <form className=\"s-items\" ref={formRef} >\r\n          \r\n          \r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\" sty>{placeData.title1} \r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[0]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus('good0',Switch0,setSwitch0)} />\r\n              </Badge>            \r\n            </IconButton> }\r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\" placeholder={placeData.text1} \r\n            ref={scamperS}  onChange={onSubmit} value={data.scamS} />\r\n          </div>\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">{placeData.title2}\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[1]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus('good1',Switch1,setSwitch1)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\" placeholder={placeData.text2} \r\n            ref={scamperC} onChange={onSubmit} value={data.scamC} />\r\n          </div>\r\n        \r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">{placeData.title3}\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[2]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus('good2',Switch2,setSwitch2)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\" placeholder={placeData.text3} \r\n            ref={scamperA} onChange={onSubmit} value={data.scamA} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">{placeData.title4}\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[3]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus('good3',Switch3,setSwitch3)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\" placeholder={placeData.text4} \r\n            ref={scamperM} onChange={onSubmit} value={data.scamM} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">{placeData.title5}\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[4]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus('good4',Switch4,setSwitch4)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\" placeholder={placeData.text5} \r\n            ref={scamperP} onChange={onSubmit} value={data.scamP} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">{placeData.title6}\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[5]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus('good5',Switch5,setSwitch5)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\" placeholder={placeData.text6}  \r\n            ref={scamperE} onChange={onSubmit} value={data.scamE} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">{placeData.title7}\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[6]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus('good6',Switch6,setSwitch6)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            ref={scamperR} onChange={onSubmit} value={data.scamR} placeholder={placeData.text7} />\r\n          </div>\r\n          \r\n          <div className=\"inputBox\" >\r\n            <div className=\"s-itemTitle\" style={{width:\"100%\"}}>최종아이디어\r\n            {report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[7]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>{goodPlus2('good7',Switch7,setSwitch7)}} />\r\n              </Badge>\r\n            </IconButton> \r\n            }\r\n            </div>\r\n            <div></div>\r\n            <textarea cols=\"30\" rows=\"1\" className=\"scamperInput input1\" ref={aTitle} \r\n            onChange={onSubmit} value={data.aTitle} placeholder=\"제목\" />\r\n            <textarea cols=\"30\" rows=\"1\" className=\"scamperInput input2\" ref={bName} \r\n            onChange={onSubmit} value={data.bName} placeholder=\"작성자\" />\r\n\r\n            <textarea cols=\"30\" rows=\"1\" className=\"scamperInput input3\" ref={input3} \r\n            onChange={onSubmit} value={data.input3} placeholder={placeData.goodidea} />            \r\n            <textarea cols=\"30\" rows=\"1\" className=\"scamperInput input4\" ref={input4} \r\n            onChange={onSubmit} value={data.input4} placeholder={placeData.bestidea} />\r\n            <textarea cols=\"30\" rows=\"1\" className=\"scamperInput input5 \" ref={input5} \r\n            onChange={onSubmit} value={data.input5} placeholder={placeData.plusidea} />\r\n            <textarea cols=\"30\" rows=\"1\" className=\"scamperInput input6\" ref={input6} \r\n            onChange={onSubmit} value={data.input6} placeholder={placeData.minusidea} />            \r\n            <input type=\"button\" className=\"scamperInput btn\" onClick={btnInput} value=\"제출\"/>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default memo(Scamper);","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\loginModal\\LoginModal.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytool.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\authTable\\Atable.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\togo\\Togo.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Todo.jsx",["76"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Itemrow from './Itemrow';\r\nimport './todo.css';\r\n\r\nfunction Todo({ fireApp, user, userName,  }) {\r\n\r\n  const today = new Date().toLocaleDateString();\r\n  const textRef = useRef();\r\n  const titleRef = useRef();\r\n  const rocketRef = useRef();\r\n  const [items, setItems] = useState({});\r\n  const [todoCount, setTodoCount] = useState(0);\r\n  const folder = \"todo\"\r\n  // 데이터 보여주기 싱크\r\n  useEffect(() => {    \r\n    fireApp.onAuth((e) => {\r\n    const cf = {\r\n      f1: (p)=>{setItems(p)},\r\n      f2: ()=>{setItems({})}\r\n      }\r\n   e ? fireApp.itemSync(folder,e.uid, cf):console.log('no-User')\r\n    })\r\n  }, [fireApp]);\r\n\r\n  //DB에 글 데이터 저장\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if(e.currentTarget == null){return;}\r\n    const text = textRef.current.value;\r\n    const title = titleRef.current.value;\r\n    if (userName && title) {\r\n    console.log(title)\r\n      const dataId = Date.now();\r\n      const data = {\r\n        uid: user.uid,\r\n        dataId: dataId,\r\n        name: userName,\r\n        title: title,\r\n        text: text,\r\n        today: today,\r\n        progress: 0\r\n      }\r\n      fireApp.itemSave(folder,data)\r\n    }\r\n    titleRef.current.value = '';\r\n    textRef.current.value = '';\r\n  }\r\n\r\n  //로켓발사\r\n  const rocketOn = () => {\r\n    rocketRef.current.classList.add(\"rocketOn\");\r\n    setTimeout(() => {\r\n      rocketRef.current.classList.remove(\"rocketOn\");\r\n      clearTimeout(rocketOn);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className='todo-header'> {userName} 오늘-할일 {todoCount}개</div>\r\n      <div className=\"todo-items\">\r\n        {\r\n          Object.keys(items).map((e) => {\r\n            return <Itemrow key={e} item={items[e]} fireApp={fireApp} />\r\n          })\r\n          // <Itemrow  key={uid} item={items} items={items}/> \r\n        }\r\n      </div>\r\n      <div className=\"todo-input\">\r\n        <form onSubmit={submit} className=\"todo-form\">\r\n          <input type=\"text\" ref={titleRef} className=\"inputTitle\" />\r\n          <button className=\"btnadd\" onClick={rocketOn} style={{ outline: \"none\", border: \"none\" }} >\r\n            <span className=\"rocket\" ref={rocketRef}  >🚀</span>  추가</button>\r\n          <textarea className=\"textarea\" ref={textRef} cols=\"30\" rows=\"3\" style={{resize: 'none'}} />\r\n        </form>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mypage\\Mypage.jsx",["77","78","79","80","81","82","83"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\placeholder.js",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\ScamperReport.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Toolrow.jsx",["84"],"import './toolrow.css';\r\nimport React, { memo, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { ThumbUp } from '@material-ui/icons';\r\n\r\nfunction  Toolrow ({item,fireApp}) {\r\n  const folder = \"mytool\";\r\n  const Swal = require('sweetalert2');\r\n  // const [video, setVideo] = useState('');\r\n  const fire = () => {Swal.fire({html:item.text2, width:'90%'})}\r\n  const [Switch, setSwitch] = useState(true);\r\n\r\n  let counter = item.progress;\r\n  const itemDel=() => {\r\n    fireApp.itemDel(folder,item.uid,item.dataId)\r\n  }\r\n  const plus = () => {\r\n    Switch &&counter++;\r\n    fireApp.itemUp(folder,item.uid,item.dataId,counter)\r\n    setSwitch(!Switch);\r\n\r\n  }\r\n  // const minus = () => {\r\n  //   counter>0&&counter--;\r\n  //   fireApp.itemUp(folder,item.uid,item.dataId,counter)\r\n  // }\r\n  return (\r\n    <div className=\"toolrow\">\r\n      <div className=\"theader\">\r\n        <div className=\"headerToday\">{item.title}</div>\r\n        <Badge badgeContent={item.progress} color=\"secondary\" style={{right:'10px'}}  \r\n          anchorOrigin={{vertical: 'bottom', horizontal: 'left', }}/>\r\n        <ThumbUp style={{color:'var(--Bcolor)'}} size=\"small\" />        \r\n      </div>\r\n      {/* <div className=\"title\"> {item.text}</div>      */}\r\n      <textarea  className=\"title\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            value= {item.text} />\r\n      <textarea  className=\"text\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            value= {item.text2} />\r\n      <div className=\"btnG\">\r\n        <button className=\"btn btn0\" onClick={plus}>좋아요</button>\r\n        <button className=\"btn btn1\" onClick={fire}>보기</button>\r\n        <CopyToClipboard text={item.text2}>\r\n        <button className=\"btn btn2\" >복사</button>\r\n        </CopyToClipboard>\r\n        <button className=\"btn btn3\" onClick={itemDel}>삭제</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Toolrow);","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Itemrow.jsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":11,"column":8,"nodeType":"91","messageId":"92","endLine":11,"endColumn":13},{"ruleId":"89","severity":1,"message":"93","line":9,"column":8,"nodeType":"91","messageId":"92","endLine":9,"endColumn":12},{"ruleId":"89","severity":1,"message":"94","line":196,"column":11,"nodeType":"91","messageId":"92","endLine":196,"endColumn":18},{"ruleId":"89","severity":1,"message":"95","line":12,"column":21,"nodeType":"91","messageId":"92","endLine":12,"endColumn":33},{"ruleId":"89","severity":1,"message":"96","line":7,"column":9,"nodeType":"91","messageId":"92","endLine":7,"endColumn":15},{"ruleId":"89","severity":1,"message":"97","line":9,"column":9,"nodeType":"91","messageId":"92","endLine":9,"endColumn":17},{"ruleId":"89","severity":1,"message":"98","line":12,"column":10,"nodeType":"91","messageId":"92","endLine":12,"endColumn":18},{"ruleId":"89","severity":1,"message":"99","line":12,"column":20,"nodeType":"91","messageId":"92","endLine":12,"endColumn":31},{"ruleId":"89","severity":1,"message":"100","line":13,"column":25,"nodeType":"91","messageId":"92","endLine":13,"endColumn":30},{"ruleId":"89","severity":1,"message":"101","line":13,"column":39,"nodeType":"91","messageId":"92","endLine":13,"endColumn":43},{"ruleId":"89","severity":1,"message":"102","line":13,"column":44,"nodeType":"91","messageId":"92","endLine":13,"endColumn":49},{"ruleId":"89","severity":1,"message":"93","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":12},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'level' is assigned a value but never used.","Identifier","unusedVar","'Swal' is defined but never used.","'roomUid' is assigned a value but never used.","'setTodoCount' is assigned a value but never used.","'folder' is assigned a value but never used.","'userName' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","'watch' is assigned a value but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]