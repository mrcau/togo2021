[{"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\index.js":"1","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\firebase.js":"2","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\App.js":"3","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx":"4","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Todo.jsx":"5","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\authTable\\Atable.jsx":"6","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\loginModal\\LoginModal.jsx":"7","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytool.jsx":"8","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\togo\\Togo.jsx":"9","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx":"10","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\Scamper.jsx":"11","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\placeholder.js":"12","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Itemrow.jsx":"13","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Toolrow.jsx":"14","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\ScamperReport.jsx":"15"},{"size":521,"mtime":1610929896720,"results":"16","hashOfConfig":"17"},{"size":8593,"mtime":1612313112452,"results":"18","hashOfConfig":"17"},{"size":4873,"mtime":1612498575114,"results":"19","hashOfConfig":"17"},{"size":5861,"mtime":1612397495030,"results":"20","hashOfConfig":"17"},{"size":2458,"mtime":1612397495157,"results":"21","hashOfConfig":"17"},{"size":7495,"mtime":1612313112415,"results":"22","hashOfConfig":"17"},{"size":4446,"mtime":1612505599311,"results":"23","hashOfConfig":"17"},{"size":2673,"mtime":1612397495087,"results":"24","hashOfConfig":"17"},{"size":940,"mtime":1612137918502,"results":"25","hashOfConfig":"17"},{"size":993,"mtime":1612499183145,"results":"26","hashOfConfig":"17"},{"size":19649,"mtime":1612505296257,"results":"27","hashOfConfig":"17"},{"size":2214,"mtime":1612505556532,"results":"28","hashOfConfig":"17"},{"size":1483,"mtime":1612397495148,"results":"29","hashOfConfig":"17"},{"size":2015,"mtime":1612406311001,"results":"30","hashOfConfig":"17"},{"size":1879,"mtime":1612485218231,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"muhfwc",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\index.js",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\firebase.js",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\App.js",[],["66","67"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx",["68","69","70"],"import './leftMenu.css';\r\nimport { Avatar,  IconButton } from '@material-ui/core';\r\nimport { BatteryCharging20, BatteryCharging50, BatteryCharging80, BatteryChargingFull, PhotoCamera, WbIncandescentOutlined } from '@material-ui/icons';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport {  Link, useHistory } from 'react-router-dom';\r\nimport mime from 'mime-types';\r\nimport { Accordion, Card, Dropdown } from 'react-bootstrap';\r\n\r\nfunction LeftMenu({ fireApp, user, photo, setPhoto, logout }) {\r\nconst [level, setLevel] = useState(0);\r\n\r\nuseEffect(() => {\r\n  fireApp.onAuth((e) => {\r\n    if (e) {fireApp.authSync('auth',e.uid,(p)=>setLevel(p))}\r\n    else { console.log('no-User') }\r\n  })\r\n}) \r\n\r\n  const upLoad = (e) => {\r\n    const file = e.target.files[0];\r\n    const metaData = { contentType: mime.lookup(file.name) }\r\n    fireApp.imgUpload(user.uid, file, metaData, (e) => setPhoto(e));\r\n  }\r\n  const history = useHistory();\r\nconsole.log(user.uid)\r\n  return (\r\n    <div className=\"leftMenu\">\r\n\r\n      {photo ? <div className=\"imgBg\" style={{ backgroundImage: `url(\"${photo}\")` }} />\r\n        : <Avatar style={{ width: '120px', height: '120px' }} />}\r\n      {Object.keys(user).length>0 &&\r\n        <input accept=\"image/*\" style={{ display: 'none' }} id=\"photoFile\" type=\"file\" onChange={upLoad} />\r\n      }\r\n      <label htmlFor=\"photoFile\"> \r\n        <IconButton size=\"small\" component=\"span\"> <PhotoCamera /> </IconButton>\r\n      </label>\r\n      {user.uid&&<div style={{width:'100%'}}>\r\n        <button className=\"btnLogout\" onClick={logout} > 로그아웃 </button>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/\"><BatteryCharging20/> My Page</Link> </div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/todo\"><BatteryCharging20/> My Todo</Link></div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/mytool\"><BatteryCharging20/> My Tool</Link></div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/atable\"><BatteryCharging20/> My users</Link></div>\r\n      </div>}\r\n      <hr style={{width:'90%',border:'dashed 1px gray'}} />\r\n    \r\n      <div className=\"btntitle\" disabled > 디자인씽킹</div>\r\n\r\n        <Accordion  style={{width:'100%'}}>\r\n          <Card className={\"card\"}>\r\n            <Accordion.Toggle as={Card.Header} className=\"accordion\" eventKey=\"0\">\r\n            <BatteryCharging20/> 문제 찾기 \r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse  eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 관찰하기 </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 페르소나 </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 5Why질문 </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"1\">\r\n            <BatteryCharging50/> 데이터 분석\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 유투브</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 상권분석</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 구글</Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"2\">\r\n            <BatteryCharging80/>  창의적발상\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 브레인스톰</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 만다라트</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" onClick={() => history.push('/scamper')}> - 스캠퍼</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 트리즈</Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"3\">\r\n            <BatteryChargingFull/> 문제해결\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 프로토타입</Card.Body>\r\n            </Accordion.Collapse>            \r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"4\">\r\n            🚀 스타트업\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - SWOT분석</Card.Body>\r\n            </Accordion.Collapse>            \r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 식스분석</Card.Body>\r\n            </Accordion.Collapse>            \r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 린캔버스</Card.Body>\r\n            </Accordion.Collapse>            \r\n          </Card>\r\n        </Accordion>\r\n        \r\n        \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(LeftMenu);","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Todo.jsx",["71"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Itemrow from './Itemrow';\r\nimport './todo.css';\r\n\r\nfunction Todo({ fireApp, user, userName,  }) {\r\n\r\n  const today = new Date().toLocaleDateString();\r\n  const textRef = useRef();\r\n  const titleRef = useRef();\r\n  const rocketRef = useRef();\r\n  const [items, setItems] = useState({});\r\n  const [todoCount, setTodoCount] = useState(0);\r\n  const folder = \"todo\"\r\n  // 데이터 보여주기 싱크\r\n  useEffect(() => {    \r\n    fireApp.onAuth((e) => {\r\n    const cf = {\r\n      f1: (p)=>{setItems(p)},\r\n      f2: ()=>{setItems({})}\r\n      }\r\n   e ? fireApp.itemSync(folder,e.uid, cf):console.log('no-User')\r\n    })\r\n  }, [fireApp]);\r\n\r\n  //DB에 글 데이터 저장\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if(e.currentTarget == null){return;}\r\n    const text = textRef.current.value;\r\n    const title = titleRef.current.value;\r\n    if (userName && title) {\r\n    console.log(title)\r\n      const dataId = Date.now();\r\n      const data = {\r\n        uid: user.uid,\r\n        dataId: dataId,\r\n        name: userName,\r\n        title: title,\r\n        text: text,\r\n        today: today,\r\n        progress: 0\r\n      }\r\n      fireApp.itemSave(folder,data)\r\n    }\r\n    titleRef.current.value = '';\r\n    textRef.current.value = '';\r\n  }\r\n\r\n  //로켓발사\r\n  const rocketOn = () => {\r\n    rocketRef.current.classList.add(\"rocketOn\");\r\n    setTimeout(() => {\r\n      rocketRef.current.classList.remove(\"rocketOn\");\r\n      clearTimeout(rocketOn);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className='todo-header'> {userName} 오늘-할일 {todoCount}개</div>\r\n      <div className=\"todo-items\">\r\n        {\r\n          Object.keys(items).map((e) => {\r\n            return <Itemrow key={e} item={items[e]} fireApp={fireApp} />\r\n          })\r\n          // <Itemrow  key={uid} item={items} items={items}/> \r\n        }\r\n      </div>\r\n      <div className=\"todo-input\">\r\n        <form onSubmit={submit} className=\"todo-form\">\r\n          <input type=\"text\" ref={titleRef} className=\"inputTitle\" />\r\n          <button className=\"btnadd\" onClick={rocketOn} style={{ outline: \"none\", border: \"none\" }} >\r\n            <span className=\"rocket\" ref={rocketRef}  >🚀</span>  추가</button>\r\n          <textarea className=\"textarea\" ref={textRef} cols=\"30\" rows=\"3\" style={{resize: 'none'}} />\r\n        </form>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\authTable\\Atable.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\loginModal\\LoginModal.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytool.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\togo\\Togo.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\Scamper.jsx",["72","73"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\placeholder.js",["74"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Itemrow.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Toolrow.jsx",["75"],"import './toolrow.css';\r\nimport React, { memo, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { ThumbUp } from '@material-ui/icons';\r\n\r\nfunction  Toolrow ({item,fireApp}) {\r\n  const folder = \"mytool\";\r\n  const Swal = require('sweetalert2');\r\n  // const [video, setVideo] = useState('');\r\n  const fire = () => {Swal.fire({html:item.text2, width:'90%'})}\r\n  const [Switch, setSwitch] = useState(true);\r\n\r\n  let counter = item.progress;\r\n  const itemDel=() => {\r\n    fireApp.itemDel(folder,item.uid,item.dataId)\r\n  }\r\n  const plus = () => {\r\n    Switch &&counter++;\r\n    fireApp.itemUp(folder,item.uid,item.dataId,counter)\r\n    setSwitch(!Switch);\r\n\r\n  }\r\n  // const minus = () => {\r\n  //   counter>0&&counter--;\r\n  //   fireApp.itemUp(folder,item.uid,item.dataId,counter)\r\n  // }\r\n  return (\r\n    <div className=\"toolrow\">\r\n      <div className=\"theader\">\r\n        <div className=\"headerToday\">{item.title}</div>\r\n        <Badge badgeContent={item.progress} color=\"secondary\" style={{right:'10px'}}  \r\n          anchorOrigin={{vertical: 'bottom', horizontal: 'left', }}/>\r\n        <ThumbUp style={{color:'var(--Bcolor)'}} size=\"small\" />        \r\n      </div>\r\n      {/* <div className=\"title\"> {item.text}</div>      */}\r\n      <textarea  className=\"title\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            value= {item.text} />\r\n      <textarea  className=\"text\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            value= {item.text2} />\r\n      <div className=\"btnG\">\r\n        <button className=\"btn btn0\" onClick={plus}>좋아요</button>\r\n        <button className=\"btn btn1\" onClick={fire}>보기</button>\r\n        <CopyToClipboard text={item.text2}>\r\n        <button className=\"btn btn2\" >복사</button>\r\n        </CopyToClipboard>\r\n        <button className=\"btn btn3\" onClick={itemDel}>삭제</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Toolrow);","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\ScamperReport.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":3,"column":101,"nodeType":"82","messageId":"83","endLine":3,"endColumn":123},{"ruleId":"80","severity":1,"message":"84","line":7,"column":27,"nodeType":"82","messageId":"83","endLine":7,"endColumn":35},{"ruleId":"80","severity":1,"message":"85","line":10,"column":8,"nodeType":"82","messageId":"83","endLine":10,"endColumn":13},{"ruleId":"80","severity":1,"message":"86","line":12,"column":21,"nodeType":"82","messageId":"83","endLine":12,"endColumn":33},{"ruleId":"80","severity":1,"message":"87","line":9,"column":8,"nodeType":"82","messageId":"83","endLine":9,"endColumn":12},{"ruleId":"80","severity":1,"message":"88","line":188,"column":11,"nodeType":"82","messageId":"83","endLine":188,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":1,"column":1,"nodeType":"91","endLine":42,"endColumn":2},{"ruleId":"80","severity":1,"message":"87","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":12},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'WbIncandescentOutlined' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'level' is assigned a value but never used.","'setTodoCount' is assigned a value but never used.","'Swal' is defined but never used.","'roomUid' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]