[{"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\App.js":"2","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\firebase.js":"3","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx":"4","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\loginModal\\LoginModal.jsx":"5","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Todo.jsx":"6","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\togo\\Togo.jsx":"7","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\authTable\\Atable.jsx":"8","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\Scamper.jsx":"9","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx":"10","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytool.jsx":"11","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mypage\\Mypage.jsx":"12","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\opentool\\Opentool.jsx":"13","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\price\\Price.jsx":"14","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\placeholder.js":"15","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Toolrow.jsx":"16","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\opentool\\Toolrow.jsx":"17","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Itemrow.jsx":"18","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\opentool\\Opentoolbox.jsx":"19","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\ScamperReport.jsx":"20"},{"size":524,"mtime":1612879208529,"results":"21","hashOfConfig":"22"},{"size":5861,"mtime":1612946776089,"results":"23","hashOfConfig":"22"},{"size":10169,"mtime":1613146656350,"results":"24","hashOfConfig":"22"},{"size":3956,"mtime":1613021356250,"results":"25","hashOfConfig":"22"},{"size":4785,"mtime":1612946776091,"results":"26","hashOfConfig":"22"},{"size":2458,"mtime":1612774660827,"results":"27","hashOfConfig":"22"},{"size":4460,"mtime":1613021356254,"results":"28","hashOfConfig":"22"},{"size":7523,"mtime":1612774660816,"results":"29","hashOfConfig":"22"},{"size":23935,"mtime":1613174067506,"results":"30","hashOfConfig":"22"},{"size":1040,"mtime":1612774660822,"results":"31","hashOfConfig":"22"},{"size":2904,"mtime":1612946776093,"results":"32","hashOfConfig":"22"},{"size":2285,"mtime":1613021356252,"results":"33","hashOfConfig":"22"},{"size":2949,"mtime":1612946776094,"results":"34","hashOfConfig":"22"},{"size":560,"mtime":1612873995353,"results":"35","hashOfConfig":"22"},{"size":2144,"mtime":1612774660825,"results":"36","hashOfConfig":"22"},{"size":2015,"mtime":1612774660823,"results":"37","hashOfConfig":"22"},{"size":2024,"mtime":1612946776095,"results":"38","hashOfConfig":"22"},{"size":1483,"mtime":1612774660827,"results":"39","hashOfConfig":"22"},{"size":1026,"mtime":1612946776095,"results":"40","hashOfConfig":"22"},{"size":2181,"mtime":1613174059850,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"pytjxg",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\index.js",[],["92","93"],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\App.js",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\firebase.js",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\loginModal\\LoginModal.jsx",["94","95"],"import './loginModal.css';\r\nimport React, { memo, useRef, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport Swal from 'sweetalert2';\r\nimport google from './goolge.png';\r\n\r\nfunction LoginModal({ fireApp, setuser,moveModal4,registerTF, setRegisterTF }) {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const emailRegisterRef = useRef();\r\n  const nameRegisterRef = useRef();\r\n  const passRegisterRef = useRef();\r\n  const repassRegisterRef = useRef();\r\n  const Swal = require('sweetalert2');\r\n\r\n  // 이메일로그인\r\n  const emailLogin = (e) => {\r\n    e.preventDefault();\r\n    const email = emailRef.current.value;\r\n    const pass = passRef.current.value;\r\n    fireApp.emailLogin(email, pass);\r\n  }\r\n\r\n  // 구글로그인\r\n  const googleLogin = () => fireApp.login();\r\n\r\n  // 회원가입\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const name = nameRegisterRef.current.value;\r\n    const email = emailRegisterRef.current.value;\r\n    const pass = passRegisterRef.current.value;\r\n    const pass2 = repassRegisterRef.current.value;\r\n    const level = 0;\r\n    const info = { name, email,pass,level }\r\n    const cf =  (e) => setuser(e);\r\n\r\n    if(!name||!email||!pass||!pass2){Swal.fire({title:\"빈칸을 모두 채워주세요\",icon:'warning'})}\r\n    else if(pass!==pass2){Swal.fire({title:'비밀번호가 맞지 않습니다',icon:'error'})}\r\n    else{\r\n      Swal.fire({title: '저장하겠습니까?',html: \"이름: \"+name+\", 이메일: \"+ email +\", 비밀번호: \" + pass,\r\n       showCancelButton: true, confirmButtonText: `확인`,}).then((result) => {\r\n        if(result.isConfirmed){\r\n          Swal.fire({title:nameRegisterRef.current.value+'님 회원가입 완료!'})\r\n          fireApp.createUser(info, cf);\r\n         }\r\n       })\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"loginModal\">\r\n      {/* LoginModal */}\r\n      {!registerTF &&\r\n        <div className=\"auth\">\r\n          <h4>로그인</h4>\r\n          <Form onSubmit={emailLogin}>\r\n            <Form.Group controlId=\"formBasicEmailLogin\" className=\"formGroup\" >\r\n              <Form.Label className=\"formLabel\"><MailOutlineIcon /></Form.Label>\r\n              <Form.Control className=\"formInput\" type=\"email\" ref={emailRef} placeholder=\"이메일\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\" className=\"formGroup\" >\r\n              <Form.Label className=\"formLabel\"><LockOpenIcon /></Form.Label>\r\n              <Form.Control className=\"formInput\" type=\"password\" ref={passRef} placeholder=\"패스워드\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\"> 로그인</Button>\r\n          </Form>\r\n          <button className=\"btnGoogle\" style={{ background: \"white\" }} onClick={googleLogin} >\r\n            <img src={google} alt=\"googe\" width=\"50px\" /> </button>\r\n          <button className=\"btnRegister\" style={{ background: \"white\" }} onClick={() => setRegisterTF(true)} >\r\n            아이디가 없다면...</button>\r\n        </div>\r\n      }\r\n\r\n      {/* Register */}\r\n      <div className=\"auth reigster\" style={{ display: !registerTF && 'none' }}>\r\n        <h4>회원가입</h4>\r\n        <Form onSubmit={onSubmit}>\r\n          <Form.Group controlId=\"formBasicName\" className=\"formGroup\" >\r\n            <Form.Label className=\"formLabel\"><InsertEmoticonIcon /></Form.Label>\r\n            <Form.Control className=\"formInput\" type=\"text\" ref={nameRegisterRef} placeholder=\"이름\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicEmail\" className=\"formGroup\" >\r\n            <Form.Label className=\"formLabel\"><MailOutlineIcon /></Form.Label>\r\n            <Form.Control className=\"formInput\" type=\"email\" ref={emailRegisterRef} placeholder=\"이메일\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword1\" className=\"formGroup\" >\r\n            <Form.Label className=\"formLabel\"><LockOpenIcon /></Form.Label>\r\n            <Form.Control className=\"formInput\" type=\"password\" ref={passRegisterRef} placeholder=\"패스워드\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword2\" className=\"formGroup\" >\r\n            <Form.Label className=\"formLabel\"><LockOpenIcon /></Form.Label>\r\n            <Form.Control className=\"formInput\" type=\"password\" ref={repassRegisterRef} placeholder=\"패스워드 확인\" />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(LoginModal);","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Todo.jsx",["96"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Itemrow from './Itemrow';\r\nimport './todo.css';\r\n\r\nfunction Todo({ fireApp, user, userName,  }) {\r\n\r\n  const today = new Date().toLocaleDateString();\r\n  const textRef = useRef();\r\n  const titleRef = useRef();\r\n  const rocketRef = useRef();\r\n  const [items, setItems] = useState({});\r\n  const [todoCount, setTodoCount] = useState(0);\r\n  const folder = \"todo\"\r\n  // 데이터 보여주기 싱크\r\n  useEffect(() => {    \r\n    fireApp.onAuth((e) => {\r\n    const cf = {\r\n      f1: (p)=>{setItems(p)},\r\n      f2: ()=>{setItems({})}\r\n      }\r\n   e ? fireApp.itemSync(folder,e.uid, cf):console.log('no-User')\r\n    })\r\n  }, [fireApp]);\r\n\r\n  //DB에 글 데이터 저장\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if(e.currentTarget == null){return;}\r\n    const text = textRef.current.value;\r\n    const title = titleRef.current.value;\r\n    if (userName && title) {\r\n    console.log(title)\r\n      const dataId = Date.now();\r\n      const data = {\r\n        uid: user.uid,\r\n        dataId: dataId,\r\n        name: userName,\r\n        title: title,\r\n        text: text,\r\n        today: today,\r\n        progress: 0\r\n      }\r\n      fireApp.itemSave(folder,data)\r\n    }\r\n    titleRef.current.value = '';\r\n    textRef.current.value = '';\r\n  }\r\n\r\n  //로켓발사\r\n  const rocketOn = () => {\r\n    rocketRef.current.classList.add(\"rocketOn\");\r\n    setTimeout(() => {\r\n      rocketRef.current.classList.remove(\"rocketOn\");\r\n      clearTimeout(rocketOn);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className='todo-header'> {userName} 오늘-할일 {todoCount}개</div>\r\n      <div className=\"todo-items\">\r\n        {\r\n          Object.keys(items).map((e) => {\r\n            return <Itemrow key={e} item={items[e]} fireApp={fireApp} />\r\n          })\r\n          // <Itemrow  key={uid} item={items} items={items}/> \r\n        }\r\n      </div>\r\n      <div className=\"todo-input\">\r\n        <form onSubmit={submit} className=\"todo-form\">\r\n          <input type=\"text\" ref={titleRef} className=\"inputTitle\" />\r\n          <button className=\"btnadd\" onClick={rocketOn} style={{ outline: \"none\", border: \"none\" }} >\r\n            <span className=\"rocket\" ref={rocketRef}  >🚀</span>  추가</button>\r\n          <textarea className=\"textarea\" ref={textRef} cols=\"30\" rows=\"3\" style={{resize: 'none'}} />\r\n        </form>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\togo\\Togo.jsx",["97","98"],"import React from 'react';\r\nimport { Jumbotron,Button, Card } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './togo.css';\r\nimport problem from './problem.png';\r\nimport anlysis from './analysis.png';\r\nimport idea from './idea.png';\r\nimport solution from './solution.png';\r\nimport tool from './tool.png';\r\nimport rocket from './rocket.png';\r\n\r\nimport Opentoolbox from '../opentool/Opentoolbox';\r\n\r\n\r\nfunction Togo({ fireApp, user, userInfo,  }) {\r\nconst history = useHistory();\r\n  return (\r\n    <div className=\"togo\" style={{paddingBottom:\"10px\"}}>      \r\n      <div className=\"togoTop\" style={{display:\"flex\"}} > \r\n        <Jumbotron className=\"jumbo\" style={{background:\"none\",flex:\"1\"}}>\r\n          <h1 style={{fontWeight:\"900\",color:\"var(--Acolor)\"}}>협업! 도전!</h1>\r\n          <p>디자인씽킹 기반의 협업도구로 기발한 아이디어와 도전을 이끌어내 보세요.\r\n             자신만의 도구를 만들고 더욱 편리하게 그룹별 공동작업을 시작할 수 있습니다.\r\n          </p>\r\n          <p>\r\n            <button className=\"btn1\" style={{width:\"150px\"}}>브레인스톰</button>\r\n            </p>\r\n        </Jumbotron> \r\n        <div className=\"togoback\" />\r\n      </div>\r\n      <div className=\"togoMain\">          \r\n        <Card className=\"mainCard\" >\r\n          <Card.Img variant=\"top\" src={problem} className=\"cardImg\" />\r\n          <Card.Body>\r\n            <Card.Title style={{fontWeight:\"900\"}}>문제찾기</Card.Title>\r\n            <Card.Text>\r\n            다양한 관점의 관찰과 공감을 통해 문제 상황을 인식하고 해결의 <br/> 실마리를 찾을 수 있습니다. \r\n            </Card.Text>\r\n            <button className=\"btn1\">바로가기</button>\r\n\r\n          </Card.Body>\r\n        </Card>      \r\n        <Card className=\"mainCard\" >\r\n          <Card.Img variant=\"top\"  src={anlysis} className=\"cardImg\"  />\r\n          <Card.Body>\r\n            <Card.Title style={{fontWeight:\"900\"}}>데이터분석</Card.Title>\r\n            <Card.Text>\r\n            데이터 수집/분석은 문제해결을<br/> 위한 최적의 판단을 내리는 과학적 근거가 됩니다.\r\n            </Card.Text>\r\n            <button className=\"btn1\">바로가기</button>\r\n\r\n          </Card.Body>\r\n        </Card>\r\n        \r\n        <Card  className=\"mainCard\" >\r\n          <Card.Img variant=\"top\" src={idea}  className=\"cardImg\"  />\r\n          <Card.Body>\r\n            <Card.Title style={{fontWeight:\"900\"}}>아이디어</Card.Title>\r\n            <Card.Text>\r\n            유연한 사고를 이끌어 내는 창의적 발상법을 통해 다양한 아이디어를 생각할 수 있습니다.\r\n            </Card.Text>\r\n            <button className=\"btn1\" onClick={() =>history.push('/scamper')} >바로가기</button>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card  className=\"mainCard\" >\r\n          <Card.Img variant=\"top\" src={solution}  className=\"cardImg\" />\r\n          <Card.Body>\r\n            <Card.Title style={{fontWeight:\"900\"}}>문제해결</Card.Title>\r\n            <Card.Text>\r\n            아이디어를 시각·촉각으로 느낄 수 시제품 (Prototype) 을 제작하여 생각을 구체화하고 확장해 나갑니다. \r\n            </Card.Text>\r\n            <button className=\"btn1\">바로가기</button>\r\n\r\n          </Card.Body>\r\n        </Card>\r\n        <Card  className=\"mainCard\" >\r\n          <Card.Img variant=\"top\" src={rocket}  className=\"cardImg\" />\r\n          <Card.Body>\r\n            <Card.Title style={{fontWeight:\"900\"}}>스타트업</Card.Title>\r\n            <Card.Text>\r\n            문제해결을 위해 '새로움'을 만들고 '도전'하는 '기업가정신'으로 혁신적인 사업을 창출합니다.\r\n            </Card.Text>\r\n            <button className=\"btn1\">바로가기</button>\r\n\r\n          </Card.Body>\r\n        </Card>\r\n        <Card  className=\"mainCard\" >\r\n          <Card.Img variant=\"top\" src={tool}  className=\"cardImg\"  />\r\n          <Card.Body>\r\n            <Card.Title style={{fontWeight:\"900\"}}>도구의 인간</Card.Title>\r\n            <Card.Text>\r\n              급변하는 새시대에 나침반 역할을 하는 강력한 디지털 도구로 새로운 길을 개척해보세요.\r\n            </Card.Text>\r\n            <button className=\"btn1\">바로가기</button>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n\r\n\r\n    </div>  );}    \r\n    export default Togo;\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\authTable\\Atable.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\Scamper.jsx",["99"],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytool.jsx",["100"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport './mytool.css';\r\nimport Toolrow from './Toolrow';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction Mytool({ fireApp, user, userInfo  }) {\r\n\r\n  const today = new Date().toLocaleDateString();\r\n  const textRef = useRef();\r\n  const textRef2 = useRef();\r\n  const titleRef = useRef();\r\n  const rocketRef = useRef();\r\n  const [items, setItems] = useState({});\r\n  const folder = \"mytool\"\r\n  const Swal = require('sweetalert2');\r\n  // 데이터 보여주기 싱크\r\n  useEffect(() => {    \r\n    fireApp.onAuth((e) => {\r\n    const cf = {\r\n      f1: (p)=>{setItems(p)},\r\n      f2: ()=>{setItems({})}\r\n      }\r\n   e ? fireApp.itemSync(folder,e.uid, cf):console.log('no-User')\r\n    })\r\n  }, [fireApp]);\r\n\r\n  //DB에 글 데이터 저장\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if(e.currentTarget == null){return;}\r\n    const text = textRef.current.value;\r\n    const text2 = textRef2.current.value;\r\n    const title = titleRef.current.value;\r\n    console.log(title,user,userInfo)\r\n    if(!title || !text || !text2){ Swal.fire({title:'빈칸을 모두 채워주세요.',icon:'warning'}) }\r\n    if (userInfo && title && text && text2) {\r\n      rocketOn();\r\n      const dataId = Date.now();\r\n      const data = {\r\n        uid: user.uid,\r\n        dataId: dataId,\r\n        name: userInfo.name,\r\n        title: title,\r\n        text: text,\r\n        text2: text2,\r\n        today: today,\r\n        progress: 0\r\n      }\r\n      fireApp.itemSave(folder,data);      \r\n      titleRef.current.value = '';\r\n      textRef.current.value = '';\r\n      textRef2.current.value = '';\r\n    }\r\n  }\r\n\r\n  //로켓발사\r\n  const rocketOn = () => {\r\n    rocketRef.current.classList.add(\"rocketOn\");\r\n    setTimeout(() => {\r\n      rocketRef.current.classList.remove(\"rocketOn\");\r\n      clearTimeout(rocketOn);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"mytool\">\r\n      <div className='mytool-header'>  My ToolBox</div>\r\n      <div className=\"mytool-items\">\r\n        {\r\n          Object.keys(items).map((e) => {\r\n            return <Toolrow key={e} item={items[e]} fireApp={fireApp} />\r\n          })\r\n        }\r\n      </div>\r\n      <div className=\"mytool-input\">\r\n        <form onSubmit={submit} className=\"mytool-form\">\r\n          <input type=\"text\" ref={titleRef} className=\"inputTitle\" placeholder=\"제목\"/>\r\n          <button className=\"btnadd\" style={{ outline: \"none\", border: \"none\" }} >\r\n            <span className=\"rocket\" ref={rocketRef}  >🚀</span>  추가</button>\r\n          <textarea className=\"textarea\" ref={textRef} cols=\"30\" rows=\"2\" placeholder=\"설명을 적어주세요.\" />\r\n          <textarea className=\"textarea\" ref={textRef2} cols=\"30\" rows=\"4\" \r\n          style={{borderTop: 'dashed 1px'}} placeholder=\"소스코드를 입력해주세요.\" />\r\n        </form>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mytool;","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mypage\\Mypage.jsx",["101","102","103","104","105"],"import { InsertEmoticon, LockOpen, MailOutline, VpnKey } from '@material-ui/icons';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Swal from 'sweetalert2';\r\nimport \"./mypage.css\";\r\n\r\nfunction Mypage({fireApp,user,userInfo}) {\r\n  const nameRef = useRef();\r\n  const jobRef = useRef();\r\n  const Swal = require('sweetalert2');\r\n\r\n  const folder = \"auth\";\r\n  const uid = user.uid||\"\";\r\n  const userEmail = user.email || \"\";\r\n  const userName = userInfo.name ||\"\";\r\n  const job = userInfo.job ||\"\";\r\n\r\n  const profileUp = (e) => {\r\n    e.preventDefault();\r\n    const inputName = nameRef.current.value;\r\n    const inputjob = jobRef.current.value\r\n    let level = 0;\r\n    if(inputjob){level = 1}else{level=0};\r\n    if(!inputName){Swal.fire({title:\"빈칸을 모두 채워주세요\", icon:'warning'})}\r\n    else{\r\n      Swal.fire({ title: '정보를 저장하겠습니까?',  html: \"이름: \" + nameRef.current.value + \r\n      \", \"+ jobRef.current.value, showCancelButton: true, confirmButtonText: `확인`,})\r\n      .then((result) => { if(result.isConfirmed){ Swal.fire('Saved!');\r\n      fireApp.profileUp(folder,uid,{name:inputName, job:inputjob, level,user:user.uid,email:user.email});\r\n      }});\r\n    };\r\n  }\r\n  return (\r\n    <div className=\"mypage\">      \r\n      <div className=\"mypageTop\"><div className=\"logo\"/>My page</div>\r\n\r\n      <form className=\"mypageForm\" onSubmit={profileUp}>\r\n      <VpnKey/> <span style={{textAlign:\"left\",margin:\"0 0 10px 0\"}}>{uid.substr(0,6)}</span>\r\n      <MailOutline />  <span style={{textAlign:\"left\",margin:\"0 0 10px 0\"}}>{userEmail}</span>\r\n      \r\n      <InsertEmoticon  /> \r\n      <input className=\"mypageInput name\" name=\"name\" defaultValue={userName} placeholder=\"name\" ref={nameRef} />\r\n       \r\n       \r\n        \r\n        <span style={{textAlign:\"left\",fontSize:\"small\"}} >👩🏻‍🏫</span>\r\n        <input className=\"mypageInput mypagejob\" name=\"job\" ref={jobRef}  defaultValue={job}  />\r\n        <span style={{textAlign:\"right\",fontSize:\"small\"}} >교사인 경우 학교이름을 적어주세요.</span>\r\n        <button type=\"submit\" style={{marginTop:\"30px\",borderRadius:\"5px\"}}>업데이트</button>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mypage;\r\n\r\n","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\opentool\\Opentool.jsx",["106"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport './mytool.css';\r\nimport Toolrow from './Toolrow';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction Opentool({ fireApp, user, userInfo  }) {\r\n\r\n  const today = new Date().toLocaleDateString();\r\n  const textRef = useRef();\r\n  const textRef2 = useRef();\r\n  const titleRef = useRef();\r\n  const rocketRef = useRef();\r\n  const [items, setItems] = useState({});\r\n  const folder = \"Opentool\";\r\n  const Swal = require('sweetalert2');\r\n  // 데이터 보여주기 싱크\r\n  useEffect(() => {    \r\n    fireApp.onAuth((e) => {\r\n    const cf = {\r\n      f1: (p)=>{setItems(p)},\r\n      f2: ()=>{setItems({})}\r\n      }\r\n   e ? fireApp.opentoolSync(folder,cf):console.log('no-User')\r\n    })\r\n  }, [fireApp]);\r\n\r\n  //DB에 글 데이터 저장\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if(e.currentTarget == null){return;}\r\n    const text = textRef.current.value;\r\n    const text2 = textRef2.current.value;\r\n    const title = titleRef.current.value;\r\n    console.log(title,user,userInfo)\r\n    if(!title || !text || !text2){ Swal.fire({title:'빈칸을 모두 채워주세요.',icon:'warning'}) }\r\n    if (userInfo && title && text && text2) {\r\n      rocketOn();\r\n      const dataId = Date.now();\r\n      const data = {\r\n        uid: user.uid,\r\n        dataId: dataId,\r\n        name: userInfo.name,\r\n        title: title,\r\n        text: text,\r\n        text2: text2,\r\n        today: today,\r\n        progress: 0\r\n      }\r\n      fireApp.opentoolSave(folder,data);      \r\n      titleRef.current.value = '';\r\n      textRef.current.value = '';\r\n      textRef2.current.value = '';\r\n    }\r\n  }\r\n\r\n  //로켓발사\r\n  const rocketOn = () => {\r\n    rocketRef.current.classList.add(\"rocketOn\");\r\n    setTimeout(() => {\r\n      rocketRef.current.classList.remove(\"rocketOn\");\r\n      clearTimeout(rocketOn);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"mytool\">\r\n      <div className='mytool-header'>  Open ToolBox</div>\r\n      <div className=\"mytool-items\">\r\n        {\r\n          Object.keys(items).map((e) => {\r\n            return <Toolrow key={e} item={items[e]} fireApp={fireApp} />\r\n          })\r\n        }\r\n      </div>\r\n      {userInfo.level>1 &&\r\n      <div className=\"mytool-input\">\r\n        <form onSubmit={submit} className=\"mytool-form\">\r\n          <input type=\"text\" ref={titleRef} className=\"inputTitle\" placeholder=\"제목\"/>\r\n          <button className=\"btnadd\" style={{ outline: \"none\", border: \"none\" }} >\r\n            <span className=\"rocket\" ref={rocketRef}  >🚀</span>  추가</button>\r\n          <textarea className=\"textarea\" ref={textRef} cols=\"30\" rows=\"2\" placeholder=\"설명을 적어주세요.\" />\r\n          <textarea className=\"textarea\" ref={textRef2} cols=\"30\" rows=\"4\" \r\n          style={{borderTop: 'dashed 1px'}} placeholder=\"소스코드를 입력해주세요.\" />\r\n        </form>\r\n      </div>\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Opentool;","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\price\\Price.jsx",["107","108","109","110"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport \"./price.css\";\r\n\r\nfunction Price({fireApp,user,userInfo}) {\r\n \r\n  return (\r\n    <div className=\"price\">      \r\n      <div className=\"mypageTop\"><div className=\"logo\"/>Price plan</div>\r\n      <div className=\"priceTable\">\r\n        <div className=\"priceImg silver\" />\r\n        <div className=\"priceImg gold\" />\r\n        <div className=\"priceImg dia\" />\r\n        <div className=\"priceImg group\" />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n\r\n","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\placeholder.js",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Toolrow.jsx",["111"],"import './toolrow.css';\r\nimport React, { memo, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { ThumbUp } from '@material-ui/icons';\r\n\r\nfunction  Toolrow ({item,fireApp}) {\r\n  const folder = \"mytool\";\r\n  const Swal = require('sweetalert2');\r\n  // const [video, setVideo] = useState('');\r\n  const fire = () => {Swal.fire({html:item.text2, width:'90%'})}\r\n  const [Switch, setSwitch] = useState(true);\r\n\r\n  let counter = item.progress;\r\n  const itemDel=() => {\r\n    fireApp.itemDel(folder,item.uid,item.dataId)\r\n  }\r\n  const plus = () => {\r\n    Switch &&counter++;\r\n    fireApp.itemUp(folder,item.uid,item.dataId,counter)\r\n    setSwitch(!Switch);\r\n\r\n  }\r\n  // const minus = () => {\r\n  //   counter>0&&counter--;\r\n  //   fireApp.itemUp(folder,item.uid,item.dataId,counter)\r\n  // }\r\n  return (\r\n    <div className=\"toolrow\">\r\n      <div className=\"theader\">\r\n        <div className=\"headerToday\">{item.title}</div>\r\n        <Badge badgeContent={item.progress} color=\"secondary\" style={{right:'10px'}}  \r\n          anchorOrigin={{vertical: 'bottom', horizontal: 'left', }}/>\r\n        <ThumbUp style={{color:'var(--Bcolor)'}} size=\"small\" />        \r\n      </div>\r\n      {/* <div className=\"title\"> {item.text}</div>      */}\r\n      <textarea  className=\"title\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            value= {item.text} />\r\n      <textarea  className=\"text\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            value= {item.text2} />\r\n      <div className=\"btnG\">\r\n        <button className=\"btn btn0\" onClick={plus}>좋아요</button>\r\n        <button className=\"btn btn1\" onClick={fire}>보기</button>\r\n        <CopyToClipboard text={item.text2}>\r\n        <button className=\"btn btn2\" >복사</button>\r\n        </CopyToClipboard>\r\n        <button className=\"btn btn3\" onClick={itemDel}>삭제</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Toolrow);","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\opentool\\Toolrow.jsx",["112"],"import './toolrow.css';\r\nimport React, { memo, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { ThumbUp } from '@material-ui/icons';\r\n\r\nfunction  Toolrow ({item,fireApp}) {\r\n  const folder = \"Opentool\";\r\n  const Swal = require('sweetalert2');\r\n  // const [video, setVideo] = useState('');\r\n  const fire = () => {Swal.fire({html:item.text2, width:'90%'})}\r\n  const [Switch, setSwitch] = useState(true);\r\n\r\n  let counter = item.progress;\r\n  const itemDel=() => {\r\n    fireApp.opentoolDel(folder,item.dataId)\r\n  }\r\n  const plus = () => {\r\n    Switch &&counter++;\r\n    fireApp.opentoolUp(folder,item.dataId,counter)\r\n    setSwitch(!Switch);\r\n\r\n  }\r\n  // const minus = () => {\r\n  //   counter>0&&counter--;\r\n  //   fireApp.itemUp(folder,item.uid,item.dataId,counter)\r\n  // }\r\n  return (\r\n    <div className=\"toolrow\">\r\n      <div className=\"theader\">\r\n        <div className=\"headerToday\">{item.title}</div>\r\n        <Badge badgeContent={item.progress} color=\"secondary\" style={{right:'10px'}}  \r\n          anchorOrigin={{vertical: 'bottom', horizontal: 'left', }}/>\r\n        <ThumbUp style={{color:'var(--Bcolor)'}} size=\"small\" />        \r\n      </div>\r\n      {/* <div className=\"title\"> {item.text}</div>      */}\r\n      <textarea  className=\"title\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            value= {item.name+\" : \"+ item.text} />\r\n      <textarea  className=\"text\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            value= {item.text2} />\r\n      <div className=\"btnG\">\r\n        <button className=\"btn btn0\" onClick={plus}>좋아요</button>\r\n        <button className=\"btn btn1\" onClick={fire}>보기</button>\r\n        <CopyToClipboard text={item.text2}>\r\n        <button className=\"btn btn2\" >복사</button>\r\n        </CopyToClipboard>\r\n        <button className=\"btn btn3\" onClick={itemDel}>삭제</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Toolrow);","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Itemrow.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\opentool\\Opentoolbox.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\ScamperReport.jsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":31,"nodeType":"119","messageId":"120","endLine":2,"endColumn":39},{"ruleId":"117","severity":1,"message":"121","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":12},{"ruleId":"117","severity":1,"message":"122","line":12,"column":21,"nodeType":"119","messageId":"120","endLine":12,"endColumn":33},{"ruleId":"117","severity":1,"message":"123","line":2,"column":20,"nodeType":"119","messageId":"120","endLine":2,"endColumn":26},{"ruleId":"117","severity":1,"message":"124","line":12,"column":8,"nodeType":"119","messageId":"120","endLine":12,"endColumn":19},{"ruleId":"117","severity":1,"message":"121","line":9,"column":8,"nodeType":"119","messageId":"120","endLine":9,"endColumn":12},{"ruleId":"117","severity":1,"message":"121","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":12},{"ruleId":"117","severity":1,"message":"125","line":1,"column":26,"nodeType":"119","messageId":"120","endLine":1,"endColumn":34},{"ruleId":"117","severity":1,"message":"126","line":2,"column":17,"nodeType":"119","messageId":"120","endLine":2,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":2,"column":36,"nodeType":"119","messageId":"120","endLine":2,"endColumn":44},{"ruleId":"117","severity":1,"message":"127","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":17},{"ruleId":"117","severity":1,"message":"121","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":12},{"ruleId":"117","severity":1,"message":"121","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":12},{"ruleId":"117","severity":1,"message":"126","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"128","line":1,"column":28,"nodeType":"119","messageId":"120","endLine":1,"endColumn":34},{"ruleId":"117","severity":1,"message":"118","line":1,"column":36,"nodeType":"119","messageId":"120","endLine":1,"endColumn":44},{"ruleId":"117","severity":1,"message":"121","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":12},{"ruleId":"117","severity":1,"message":"121","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":12},{"ruleId":"117","severity":1,"message":"121","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":12},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Swal' is defined but never used.","'setTodoCount' is assigned a value but never used.","'Button' is defined but never used.","'Opentoolbox' is defined but never used.","'LockOpen' is defined but never used.","'useEffect' is defined but never used.","'useForm' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]