[{"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\index.js":"1","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\App.js":"2","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\firebase.js":"3","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx":"4","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Todo.jsx":"5","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\loginModal\\LoginModal.jsx":"6","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\authTable\\Atable.jsx":"7","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\togo\\Togo.jsx":"8","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\Scamper.jsx":"9","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Itemrow.jsx":"10","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\ScamperReport.jsx":"11"},{"size":521,"mtime":1610929896720,"results":"12","hashOfConfig":"13"},{"size":3416,"mtime":1611745531641,"results":"14","hashOfConfig":"13"},{"size":8507,"mtime":1612231906563,"results":"15","hashOfConfig":"13"},{"size":6187,"mtime":1611745531656,"results":"16","hashOfConfig":"13"},{"size":2451,"mtime":1611362347061,"results":"17","hashOfConfig":"13"},{"size":4435,"mtime":1611114560488,"results":"18","hashOfConfig":"13"},{"size":7488,"mtime":1611362347016,"results":"19","hashOfConfig":"13"},{"size":940,"mtime":1612137918502,"results":"20","hashOfConfig":"13"},{"size":17366,"mtime":1612230684684,"results":"21","hashOfConfig":"13"},{"size":1485,"mtime":1611362347056,"results":"22","hashOfConfig":"13"},{"size":1675,"mtime":1612230684674,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1196o09",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\index.js",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\App.js",["49"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\firebase.js",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx",["50","51","52","53","54","55","56"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Todo.jsx",["57","58"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\loginModal\\LoginModal.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\authTable\\Atable.jsx",["59"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\togo\\Togo.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\Scamper.jsx",["60"],"import { Badge,  Drawer, IconButton } from '@material-ui/core';\r\nimport {  DeleteForever,   MenuSharp, ThumbUp } from '@material-ui/icons';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport './scamper.css';\r\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\r\nimport ScamperReport from './ScamperReport';\r\nimport { Modal } from 'react-bootstrap';\r\n \r\nfunction Scamper({ fireApp, user, userName }) {\r\n  const folder = \"scamper\";\r\n  const roomSubstr = 6;\r\n  const [Switch0, setSwitch0] = useState(true);\r\n  const [Switch1, setSwitch1] = useState(true);\r\n  const [Switch2, setSwitch2] = useState(true);\r\n  const [Switch3, setSwitch3] = useState(true);\r\n  const [Switch4, setSwitch4] = useState(true);\r\n  const [Switch5, setSwitch5] = useState(true);\r\n  const [Switch6, setSwitch6] = useState(true);\r\n  const [Switch7, setSwitch7] = useState(true);\r\n\r\n  const aTitle = useRef();\r\n  const bName = useRef();\r\n  const dContent = useRef();\r\n  const scamperS = useRef();\r\n  const scamperC = useRef();\r\n  const scamperA = useRef();\r\n  const scamperM = useRef();\r\n  const scamperP = useRef();\r\n  const scamperE = useRef();\r\n  const scamperR = useRef();\r\n  const roomERef = useRef();\r\n  const formRef = useRef();\r\n  const videoRef = useRef();\r\n  const noticeRef = useRef();\r\n  const titleRef = useRef();\r\n\r\n  const [data, setdata] = useState({});\r\n  const [room, setRoom] = useState({});\r\n  const [roomName, setroomName] = useState('');\r\n  const [roomUid, setRoomUid] = useState('');\r\n  const [level, setLevel] = useState(0);\r\n  const [video, setVideo] = useState('');\r\n  const [notice, setNotice] = useState('');\r\n  //오른쪽 report 메뉴\r\n  const [state, setState] = useState({ top: false, left: false, right: false });\r\n  \r\n  const toggleDrawer = (anchor, open) => (event) => setState({ ...state, [anchor]: open });\r\n  //모달창\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  //모달창2\r\n  const [show2, setShow2] = useState(false);\r\n  const handleClose2 = () => setShow2(false);\r\n  const handleShow2 = () => setShow2(true);\r\n  //입장중\r\n  const [door, setDoor] = useState('입장')\r\n\r\n  let report = false;\r\n\r\n  //데이터싱크 \r\n  useEffect(() => {\r\n    fireApp.onAuth((e) => {\r\n      const cf = {\r\n        f1: (p) => { setdata(p) },\r\n        f2: () => { setdata({}) },\r\n        f3: (p) => { setRoom(p) },\r\n        f4: () => { setRoom({}) },\r\n      }\r\n      if (e) {\r\n        const roomUid = e.uid.substr(0, roomSubstr);\r\n        setRoomUid(e.uid.substr(0, roomSubstr));\r\n        fireApp.dataSync(folder, roomName, cf);\r\n        fireApp.roomSync(folder, roomUid, cf);\r\n        fireApp.authSync('auth',e.uid,(p)=>setLevel(p))\r\n        fireApp.videoSync(folder,roomName,'See',(p)=>setVideo(p))\r\n        fireApp.videoSync(folder,roomName,'Tok',(p)=>setNotice(p))\r\n      }\r\n      else { console.log('no-User') }\r\n    })\r\n  }, [roomName]);\r\n  \r\n  let good =[data.good0,data.good1,data.good2,data.good3,data.good4,\r\n            data.good5,data.good6,data.good7]\r\n\r\n  // 방생성\r\n  const createRoom = () => {\r\n    const num = Date.now().toString().substr(9);\r\n    const newRoom = roomUid + num;\r\n    setroomName(newRoom);\r\n    const data = {scamS:'',scamC:'',scamA:'',scamM:'',scamP:'',scamE:'',scamR:'',aTitle:'',bName: '',dContent: '', \r\n                  good0:0, good1:0, good2:0, good3:0, good4:0, good5:0, good6:0, good7:0,}\r\n    const roomget = fireApp.roomGet(folder,roomUid)\r\n    roomget < 8 && fireApp.roomSave(folder, newRoom, data)\r\n  }\r\n// 동영상 주소 저장\r\n  const videoUp = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = videoRef.current.value;\r\n    fireApp.videoSave(folder, user.uid,'See', data)\r\n  }\r\n// notice 저장 - 공지 보내기\r\n  const noticeUp = (e) => {\r\n    e.preventDefault();\r\n    const data = noticeRef.current.value;\r\n    fireApp.videoSave(folder, user.uid,'Tok', data)\r\n    noticeRef.current.value='';\r\n    \r\n    titleRef.current.classList.add(\"noticeFly\");\r\n    setTimeout(() => {\r\n      titleRef.current.classList.remove(\"noticeFly\");\r\n      clearTimeout(noticeUp);\r\n    }, 1000);\r\n  }\r\n  //scamper 글 데이터 저장, 방개수 6개 이하일때만 데이터 저장\r\n  const onSubmit = () => {\r\n    if (roomName!==roomERef.current.value||roomERef.current.value==='') { return }\r\n    const data = {\r\n      aTitle: aTitle.current.value || '',\r\n      bName: bName.current.value || '',\r\n      dContent: dContent.current.value || '',\r\n      scamS: scamperS.current.value || '',\r\n      scamC: scamperC.current.value || '',\r\n      scamA: scamperA.current.value || '',\r\n      scamM: scamperM.current.value || '',\r\n      scamP: scamperP.current.value || '',\r\n      scamE: scamperE.current.value || '',\r\n      scamR: scamperR.current.value || '',\r\n    }\r\n    \r\n    const roomUid =  roomERef.current.value.substr(0,roomSubstr)\r\n    const roomget = fireApp.roomGet(folder,roomUid)\r\n    roomget < 10 &&  fireApp.dataUp(folder, roomName, data)\r\n  }\r\n\r\n   // 보고서 제출\r\n   const btnInput = (e) => {\r\n    e.preventDefault();\r\n    const today = new Date().toLocaleDateString().substr(5);\r\n    // const id = Date.now();\r\n    if (roomName!==roomERef.current.value||roomERef.current.value==='') { return }\r\n    const data = {\r\n      cDate : today,\r\n      aTitle: aTitle.current.value || '',\r\n      bName: bName.current.value || '',\r\n      dContent: dContent.current.value || '',\r\n      scamS: scamperS.current.value || '',\r\n      scamC: scamperC.current.value || '',\r\n      scamA: scamperA.current.value || '',\r\n      scamM: scamperM.current.value || '',\r\n      scamP: scamperP.current.value || '',\r\n      scamE: scamperE.current.value || '',\r\n      scamR: scamperR.current.value || '',\r\n      good7:0\r\n    }\r\n    const roomUid =  roomERef.current.value.substr(0,roomSubstr);\r\n    const roomId = roomUid+'REPORT';\r\n    fireApp.reportSave(folder, roomId, roomName, data);\r\n  }\r\n  \r\n\r\n  // roomName.substr(0,6) 방입장\r\n    const enterRoom = () => {\r\n    const roomUid =  roomERef.current.value.substr(0,roomSubstr)\r\n    const currentRoom = roomERef.current.value;\r\n    const roomGet=()=>{\r\n      if(roomERef.current.value.length === 10){\r\n       setroomName(currentRoom);\r\n       setDoor('입장중');\r\n      }}\r\n      const cf = {\r\n        f1: (p) => { setdata(p) },\r\n        f2: () => { setdata({}) },\r\n        f3: (p) => { setRoom(p) },\r\n        f4: () => { setRoom({}) },\r\n      }\r\n\r\n    fireApp.roomUser(folder,roomUid,roomGet);\r\n    fireApp.dataSync(folder, currentRoom, cf);\r\n\r\n    }\r\n\r\n  // 관리자 방입장\r\n  const adminEnter = (e) => {\r\n    const room = e.currentTarget.textContent;\r\n    const roomname = roomUid +room\r\n    setroomName(roomUid +room)\r\n    roomERef.current.value =roomname;     \r\n  }\r\n\r\n  // Input 초기화\r\n  // const inputReset = () => {   \r\n  //   const data = {\r\n  //     scamS: scamperS.current.value = '',\r\n  //     scamC: scamperC.current.value = '',\r\n  //     scamA: scamperA.current.value = '',\r\n  //     scamM: scamperM.current.value = '',\r\n  //     scamP: scamperP.current.value = '',\r\n  //     scamE: scamperE.current.value = '',\r\n  //     scamR: scamperR.current.value = '',\r\n  //   }\r\n  //   fireApp.dataUp(folder, roomName, data)\r\n  // }\r\n\r\n // 아이템 삭제\r\n  const dataDel = () => {\r\n    if (roomName!==roomERef.current.value||roomERef.current.value==='') { return }\r\n    fireApp.dataDel(folder,roomName);        \r\n    aTitle.current.value = '';\r\n    bName.current.value = '';\r\n    dContent.current.value = '';\r\n    roomERef.current.value = '';\r\n    scamperS.current.value = '';\r\n    scamperC.current.value = '';\r\n    scamperA.current.value = '';\r\n    scamperM.current.value = '';\r\n    scamperP.current.value = '';\r\n    scamperE.current.value = '';\r\n    scamperR.current.value = '';\r\n  }\r\n  // 좋아요\r\n  \r\n  const goodPlus = (i,goodNum,Switch,setSwitch) => {\r\n    if(roomName){\r\n    Switch ? data[goodNum]++ : data[goodNum]--;\r\n    setSwitch(!Switch);\r\n    fireApp.goodUp(folder, roomName,goodNum,data[goodNum]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"scamper\" >      \r\n      <Drawer anchor={'right'} open={state['right']} onClose={toggleDrawer('right', false)}>\r\n        <ScamperReport fireApp={fireApp} user={user} folder={folder} roomName={roomName} toggleDrawer={toggleDrawer} /> \r\n      </Drawer> \r\n\r\n    {/* 동영상 모달 */}\r\n      <Modal show={show} onHide={handleClose} animation={true} size={'xl'} className=\"modal\"> \r\n        <h5 style={{background:'var(--Acolor)',color:'var(--Bcolor)'}}>\r\n          <VideocamIcon/>\r\n        </h5>\r\n        <div className=\"modalMain\">\r\n        {video \r\n        ? <iframe width=\"100%\" height=\"400\" src ={video} title=\"video\" frameBorder=\"0\" />\r\n        : '연결된 자료가 없습니다.'  \r\n        }\r\n        </div>\r\n        <button onClick={handleClose} style={{fontSize:'large'}}> Close </button>           \r\n      </Modal>\r\n\r\n    {/* 게시판 모달 */}\r\n      <Modal show={show2} onHide={handleClose2} animation={true} size={'xl'} className=\"modal\"> \r\n        <h5 style={{background:'var(--Acolor)',color:'var(--Bcolor)'}}>\r\n         게시판\r\n        </h5>\r\n        <div className=\"modalMain\">\r\n         <ScamperReport fireApp={fireApp} user={user} folder={folder} \r\n         roomName={roomName} handleClose2={handleClose2} /> \r\n        </div>\r\n        <button onClick={handleClose2} style={{fontSize:'large'}}> Close </button>           \r\n      </Modal>\r\n\r\n      {level>0 && \r\n        <form className=\"adimBar\">\r\n           <button className=\"enterBtn\" onClick={noticeUp}><AddCommentIcon/></button> \r\n          <input type=\"text\" className=\"enterInput\" placeholder=\"공지사항\" ref={noticeRef} style={{borderRight:'1px dashed'}} />\r\n          <input type=\"text\" className=\"enterInput\" placeholder=\"동영상링크\" ref = {videoRef} />\r\n          <button className=\"enterBtn\" style={{width:'30px'}} onClick={videoUp}><YouTubeIcon/></button> \r\n        </form>\r\n      }\r\n      {level>0 &&\r\n        <div className=\"adimBar\">\r\n          <div> <button className=\"enterBtn\" onClick={createRoom} style={{fontSize:'12px'}}>개설</button> </div>\r\n          <div className=\"enterNumber\" style={{fontSize:'small'}}>{room && Object.keys(room).map((e) =>\r\n              <button key={e} className=\"btnRoom\" onClick={adminEnter} >{e}</button>) }\r\n          </div>\r\n        </div>\r\n      }\r\n      <div className=\"s-header\">\r\n        <div className=\"enterWrap\" >\r\n          <button className=\"enterBtn\" onClick={enterRoom} style={{fontSize:'12px'}} >{door}</button>\r\n          <input type=\"text\" className=\"enterInput roomnum\" placeholder=\"방번호\" style={{width:'85px'}} ref={roomERef} />\r\n        </div>\r\n        {level>0 && <button className=\"btnRoomDel\" style={{margin:'0'}} onClick={dataDel}><DeleteForever /></button>  }\r\n\r\n          {/* scamper/Tiriz */}\r\n        <div className=\"enterTitle\" style={{animation:'noticeFly'}}>scamper-Tiriz</div>    \r\n\r\n        <div style={{ width: '100px',display:'flex',justifyContent:'flex-end' }}>             \r\n          <button style={{width:'30px'}}  onClick={handleShow}>\r\n             <VoiceChatIcon fontSize='small' />\r\n          </button>\r\n          <button style={{width:'30px'}} onClick={handleShow2}> \r\n            <MenuSharp />\r\n          </button> \r\n        </div>        \r\n      </div>\r\n      <div className=\"s-header noticeHeader\" ref={titleRef}>\r\n        {/* <div className=\"noticeTitle\" > 공지 </div> */}\r\n        <div className=\"enterTitle\" >{notice}</div>                  \r\n      </div>\r\n      \r\n\r\n        <form className=\"s-items\" ref={formRef} >\r\n          \r\n          \r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\" sty>S \r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[0]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(0,'good0',Switch0,setSwitch0)} />\r\n              </Badge>            \r\n            </IconButton> }\r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperS}  onChange={onSubmit} value={data.scamS} />\r\n          </div>\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">C\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[1]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(1,'good1',Switch1,setSwitch1)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperC} onChange={onSubmit} value={data.scamC} />\r\n          </div>\r\n        \r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">A\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[2]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(2,'good2',Switch2,setSwitch2)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperA} onChange={onSubmit} value={data.scamA} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">M\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[3]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(3,'good3',Switch3,setSwitch3)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperM} onChange={onSubmit} value={data.scamM} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">P\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[4]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(4,'good4',Switch4,setSwitch4)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperP} onChange={onSubmit} value={data.scamP} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">E\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[5]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(5,'good5',Switch5,setSwitch5)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperE} onChange={onSubmit} value={data.scamE} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">R\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[6]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(6,'good6',Switch6,setSwitch6)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            ref={scamperR} onChange={onSubmit} value={data.scamR} />\r\n          </div>\r\n          \r\n          <div className=\"inputBox\" >\r\n            <div className=\"s-itemTitle\" style={{width:\"100%\"}}>보고서\r\n            {report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[7]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(7,'good7',Switch7,setSwitch7)} />\r\n              </Badge>\r\n            </IconButton> \r\n            }\r\n            </div>\r\n            <div></div>\r\n            <textarea cols=\"30\" rows=\"1\" className=\"scamperInput input1\" ref={aTitle} \r\n            onChange={onSubmit} value={data.aTitle} placeholder=\"제목\" />\r\n            <textarea cols=\"30\" rows=\"1\" className=\"scamperInput input2\" ref={bName} \r\n            onChange={onSubmit} value={data.bName} placeholder=\"작성자\" />\r\n            <textarea cols=\"30\" rows=\"2\" className=\"scamperInput input3\" ref={dContent} \r\n            onChange={onSubmit} value={data.dContent} placeholder=\"내용\" />\r\n            <input type=\"button\" className=\"scamperInput btn\" onClick={btnInput} value=\"제출\"/>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Scamper;",["61","62"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Itemrow.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\ScamperReport.jsx",["63","64","65","66"],"import './scamperReport.css';\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nfunction ScamperReport({ fireApp, user, folder,roomName,handleClose2}) {\r\n// const [level, setLevel] = useState(0);\r\nconst history = useHistory();\r\nconst [data, setData] = useState({})\r\nconst [Selection, setSelection] = useState('');\r\n\r\n//데이터싱크 \r\nuseEffect(() => {\r\n    const cf = { f1:(p)=> {setData(p) }, f2:()=> {setData({}) } }\r\n    if (roomName) {fireApp.reportSync(folder,roomName,cf); }\r\n    else { console.log('no-User') }\r\n \r\n}, []);\r\nconsole.log('select',Selection)\r\n\r\n// console.log(Selection);\r\nconst columns = [\r\n  { field: 'id', headerName: 'I', width: '10vw' },\r\n  { field: 'title', headerName: '제목', width: '40vw' },\r\n  { field: 'date', headerName: '날짜', width: '20vw' }\r\n];\r\nconst selectRow = () => {\r\n  handleClose2();\r\n  console.log('hihi',Selection)\r\n}\r\n// level>0 && <button className=\"btnRoomDel\" style={{margin:'0'}} onClick={dataDel}><DeleteForever /></button>  \r\n\r\nconst rows = Object.values(data)\r\n.map((e,i) => {return( { id: i, date: e.cDate, title: e.aTitle}) })\r\n\r\n  return (\r\n    <div className=\"reportMenu\"  >\r\n     SCAMPER\r\n     <DataGrid scrollbarSize={10} className=\"row\"  rows={rows} columns={columns} pageSize={10} \r\n     autoHeight  rowHeight={25} headerHeight={25}  disableColumnMenu \r\n     onSelectionChange={(newSelection) => {setSelection(newSelection.rowIds);}}\r\n     onRowSelected={(p)=>setSelection(p.data.id)}\r\n     onRowClick={selectRow} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(ScamperReport);\r\n\r\n",{"ruleId":"67","severity":1,"message":"68","line":44,"column":6,"nodeType":"69","endLine":44,"endColumn":8,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":18,"nodeType":"73","messageId":"74","endLine":2,"endColumn":24},{"ruleId":"71","severity":1,"message":"75","line":2,"column":38,"nodeType":"73","messageId":"74","endLine":2,"endColumn":42},{"ruleId":"71","severity":1,"message":"76","line":2,"column":44,"nodeType":"73","messageId":"74","endLine":2,"endColumn":52},{"ruleId":"71","severity":1,"message":"77","line":3,"column":101,"nodeType":"73","messageId":"74","endLine":3,"endColumn":115},{"ruleId":"71","severity":1,"message":"78","line":3,"column":117,"nodeType":"73","messageId":"74","endLine":3,"endColumn":131},{"ruleId":"71","severity":1,"message":"79","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":14},{"ruleId":"71","severity":1,"message":"80","line":7,"column":37,"nodeType":"73","messageId":"74","endLine":7,"endColumn":51},{"ruleId":"71","severity":1,"message":"81","line":12,"column":21,"nodeType":"73","messageId":"74","endLine":12,"endColumn":33},{"ruleId":"67","severity":1,"message":"82","line":23,"column":6,"nodeType":"69","endLine":23,"endColumn":8,"suggestions":"83"},{"ruleId":"67","severity":1,"message":"82","line":128,"column":4,"nodeType":"69","endLine":128,"endColumn":6,"suggestions":"84"},{"ruleId":"67","severity":1,"message":"82","line":84,"column":6,"nodeType":"69","endLine":84,"endColumn":16,"suggestions":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"71","severity":1,"message":"90","line":2,"column":34,"nodeType":"73","messageId":"74","endLine":2,"endColumn":40},{"ruleId":"71","severity":1,"message":"79","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"91","line":8,"column":7,"nodeType":"73","messageId":"74","endLine":8,"endColumn":14},{"ruleId":"67","severity":1,"message":"92","line":18,"column":4,"nodeType":"69","endLine":18,"endColumn":6,"suggestions":"93"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fireApp' and 'toggleDrawer2'. Either include them or remove the dependency array.","ArrayExpression",["94"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'SearchOutlined' is defined but never used.","'WbIncandescent' is defined but never used.","'Link' is defined but never used.","'DropdownButton' is defined but never used.","'setTodoCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fireApp'. Either include it or remove the dependency array.",["95"],["96"],["97"],"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"'useRef' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fireApp', 'folder', and 'roomName'. Either include them or remove the dependency array.",["100"],{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"103","fix":"105"},{"desc":"106","fix":"107"},"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [fireApp, toggleDrawer2]",{"range":"110","text":"111"},"Update the dependencies array to be: [fireApp]",{"range":"112","text":"113"},{"range":"114","text":"113"},"Update the dependencies array to be: [fireApp, roomName]",{"range":"115","text":"116"},"Update the dependencies array to be: [fireApp, folder, roomName]",{"range":"117","text":"118"},[1641,1643],"[fireApp, toggleDrawer2]",[666,668],"[fireApp]",[4617,4619],[3072,3082],"[fireApp, roomName]",[657,659],"[fireApp, folder, roomName]"]