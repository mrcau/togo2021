[{"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\App.js":"2","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\firebase.js":"3","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx":"4","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytool.jsx":"5","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx":"6","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Todo.jsx":"7","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\loginModal\\LoginModal.jsx":"8","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\authTable\\Atable.jsx":"9","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\togo\\Togo.jsx":"10","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\Scamper.jsx":"11","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Itemrow.jsx":"12","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Toolrow.jsx":"13","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\placeholder.js":"14","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\ScamperReport.jsx":"15"},{"size":521,"mtime":1612167467961,"results":"16","hashOfConfig":"17"},{"size":3781,"mtime":1612446348851,"results":"18","hashOfConfig":"17"},{"size":8593,"mtime":1612295879187,"results":"19","hashOfConfig":"17"},{"size":5861,"mtime":1612392524642,"results":"20","hashOfConfig":"17"},{"size":2673,"mtime":1612391172485,"results":"21","hashOfConfig":"17"},{"size":925,"mtime":1612386323748,"results":"22","hashOfConfig":"17"},{"size":2458,"mtime":1612358612341,"results":"23","hashOfConfig":"17"},{"size":4435,"mtime":1612167467954,"results":"24","hashOfConfig":"17"},{"size":7495,"mtime":1612261632302,"results":"25","hashOfConfig":"17"},{"size":940,"mtime":1612167467959,"results":"26","hashOfConfig":"17"},{"size":18431,"mtime":1612479950322,"results":"27","hashOfConfig":"17"},{"size":1483,"mtime":1612363989131,"results":"28","hashOfConfig":"17"},{"size":2015,"mtime":1612426475710,"results":"29","hashOfConfig":"17"},{"size":2268,"mtime":1612426475713,"results":"30","hashOfConfig":"17"},{"size":1880,"mtime":1612478716156,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"pytjxg",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\index.js",[],["67","68"],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\App.js",["69"],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\firebase.js",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx",["70","71","72"],"import './leftMenu.css';\r\nimport { Avatar,  IconButton } from '@material-ui/core';\r\nimport { BatteryCharging20, BatteryCharging50, BatteryCharging80, BatteryChargingFull, PhotoCamera, WbIncandescentOutlined } from '@material-ui/icons';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport {  Link, useHistory } from 'react-router-dom';\r\nimport mime from 'mime-types';\r\nimport { Accordion, Card, Dropdown } from 'react-bootstrap';\r\n\r\nfunction LeftMenu({ fireApp, user, photo, setPhoto, logout }) {\r\nconst [level, setLevel] = useState(0);\r\n\r\nuseEffect(() => {\r\n  fireApp.onAuth((e) => {\r\n    if (e) {fireApp.authSync('auth',e.uid,(p)=>setLevel(p))}\r\n    else { console.log('no-User') }\r\n  })\r\n}) \r\n\r\n  const upLoad = (e) => {\r\n    const file = e.target.files[0];\r\n    const metaData = { contentType: mime.lookup(file.name) }\r\n    fireApp.imgUpload(user.uid, file, metaData, (e) => setPhoto(e));\r\n  }\r\n  const history = useHistory();\r\nconsole.log(user.uid)\r\n  return (\r\n    <div className=\"leftMenu\">\r\n\r\n      {photo ? <div className=\"imgBg\" style={{ backgroundImage: `url(\"${photo}\")` }} />\r\n        : <Avatar style={{ width: '120px', height: '120px' }} />}\r\n      {Object.keys(user).length>0 &&\r\n        <input accept=\"image/*\" style={{ display: 'none' }} id=\"photoFile\" type=\"file\" onChange={upLoad} />\r\n      }\r\n      <label htmlFor=\"photoFile\"> \r\n        <IconButton size=\"small\" component=\"span\"> <PhotoCamera /> </IconButton>\r\n      </label>\r\n      {user.uid&&<div style={{width:'100%'}}>\r\n        <button className=\"btnLogout\" onClick={logout} > 로그아웃 </button>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/\"><BatteryCharging20/> My Page</Link> </div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/todo\"><BatteryCharging20/> My Todo</Link></div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/mytool\"><BatteryCharging20/> My Tool</Link></div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/atable\"><BatteryCharging20/> My users</Link></div>\r\n      </div>}\r\n      <hr style={{width:'90%',border:'dashed 1px gray'}} />\r\n    \r\n      <div className=\"btntitle\" disabled > 디자인씽킹</div>\r\n\r\n        <Accordion  style={{width:'100%'}}>\r\n          <Card className={\"card\"}>\r\n            <Accordion.Toggle as={Card.Header} className=\"accordion\" eventKey=\"0\">\r\n            <BatteryCharging20/> 문제 찾기 \r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse  eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 관찰하기 </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 페르소나 </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 5Why질문 </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"1\">\r\n            <BatteryCharging50/> 데이터 분석\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 유투브</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 상권분석</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 구글</Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"2\">\r\n            <BatteryCharging80/>  창의적발상\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 브레인스톰</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 만다라트</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" onClick={() => history.push('/scamper')}> - 스캠퍼</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 트리즈</Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"3\">\r\n            <BatteryChargingFull/> 문제해결\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 프로토타입</Card.Body>\r\n            </Accordion.Collapse>            \r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"4\">\r\n            🚀 스타트업\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - SWOT분석</Card.Body>\r\n            </Accordion.Collapse>            \r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 식스분석</Card.Body>\r\n            </Accordion.Collapse>            \r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 린캔버스</Card.Body>\r\n            </Accordion.Collapse>            \r\n          </Card>\r\n        </Accordion>\r\n        \r\n        \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(LeftMenu);","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytool.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Todo.jsx",["73"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Itemrow from './Itemrow';\r\nimport './todo.css';\r\n\r\nfunction Todo({ fireApp, user, userName,  }) {\r\n\r\n  const today = new Date().toLocaleDateString();\r\n  const textRef = useRef();\r\n  const titleRef = useRef();\r\n  const rocketRef = useRef();\r\n  const [items, setItems] = useState({});\r\n  const [todoCount, setTodoCount] = useState(0);\r\n  const folder = \"todo\"\r\n  // 데이터 보여주기 싱크\r\n  useEffect(() => {    \r\n    fireApp.onAuth((e) => {\r\n    const cf = {\r\n      f1: (p)=>{setItems(p)},\r\n      f2: ()=>{setItems({})}\r\n      }\r\n   e ? fireApp.itemSync(folder,e.uid, cf):console.log('no-User')\r\n    })\r\n  }, [fireApp]);\r\n\r\n  //DB에 글 데이터 저장\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if(e.currentTarget == null){return;}\r\n    const text = textRef.current.value;\r\n    const title = titleRef.current.value;\r\n    if (userName && title) {\r\n    console.log(title)\r\n      const dataId = Date.now();\r\n      const data = {\r\n        uid: user.uid,\r\n        dataId: dataId,\r\n        name: userName,\r\n        title: title,\r\n        text: text,\r\n        today: today,\r\n        progress: 0\r\n      }\r\n      fireApp.itemSave(folder,data)\r\n    }\r\n    titleRef.current.value = '';\r\n    textRef.current.value = '';\r\n  }\r\n\r\n  //로켓발사\r\n  const rocketOn = () => {\r\n    rocketRef.current.classList.add(\"rocketOn\");\r\n    setTimeout(() => {\r\n      rocketRef.current.classList.remove(\"rocketOn\");\r\n      clearTimeout(rocketOn);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className='todo-header'> {userName} 오늘-할일 {todoCount}개</div>\r\n      <div className=\"todo-items\">\r\n        {\r\n          Object.keys(items).map((e) => {\r\n            return <Itemrow key={e} item={items[e]} fireApp={fireApp} />\r\n          })\r\n          // <Itemrow  key={uid} item={items} items={items}/> \r\n        }\r\n      </div>\r\n      <div className=\"todo-input\">\r\n        <form onSubmit={submit} className=\"todo-form\">\r\n          <input type=\"text\" ref={titleRef} className=\"inputTitle\" />\r\n          <button className=\"btnadd\" onClick={rocketOn} style={{ outline: \"none\", border: \"none\" }} >\r\n            <span className=\"rocket\" ref={rocketRef}  >🚀</span>  추가</button>\r\n          <textarea className=\"textarea\" ref={textRef} cols=\"30\" rows=\"3\" style={{resize: 'none'}} />\r\n        </form>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\loginModal\\LoginModal.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\authTable\\Atable.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\togo\\Togo.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\Scamper.jsx",["74","75"],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Itemrow.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Toolrow.jsx",["76"],"import './toolrow.css';\r\nimport React, { memo, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { ThumbUp } from '@material-ui/icons';\r\n\r\nfunction  Toolrow ({item,fireApp}) {\r\n  const folder = \"mytool\";\r\n  const Swal = require('sweetalert2');\r\n  // const [video, setVideo] = useState('');\r\n  const fire = () => {Swal.fire({html:item.text2, width:'90%'})}\r\n  const [Switch, setSwitch] = useState(true);\r\n\r\n  let counter = item.progress;\r\n  const itemDel=() => {\r\n    fireApp.itemDel(folder,item.uid,item.dataId)\r\n  }\r\n  const plus = () => {\r\n    Switch &&counter++;\r\n    fireApp.itemUp(folder,item.uid,item.dataId,counter)\r\n    setSwitch(!Switch);\r\n\r\n  }\r\n  // const minus = () => {\r\n  //   counter>0&&counter--;\r\n  //   fireApp.itemUp(folder,item.uid,item.dataId,counter)\r\n  // }\r\n  return (\r\n    <div className=\"toolrow\">\r\n      <div className=\"theader\">\r\n        <div className=\"headerToday\">{item.title}</div>\r\n        <Badge badgeContent={item.progress} color=\"secondary\" style={{right:'10px'}}  \r\n          anchorOrigin={{vertical: 'bottom', horizontal: 'left', }}/>\r\n        <ThumbUp style={{color:'var(--Bcolor)'}} size=\"small\" />        \r\n      </div>\r\n      {/* <div className=\"title\"> {item.text}</div>      */}\r\n      <textarea  className=\"title\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            value= {item.text} />\r\n      <textarea  className=\"text\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            value= {item.text2} />\r\n      <div className=\"btnG\">\r\n        <button className=\"btn btn0\" onClick={plus}>좋아요</button>\r\n        <button className=\"btn btn1\" onClick={fire}>보기</button>\r\n        <CopyToClipboard text={item.text2}>\r\n        <button className=\"btn btn2\" >복사</button>\r\n        </CopyToClipboard>\r\n        <button className=\"btn btn3\" onClick={itemDel}>삭제</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Toolrow);","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\placeholder.js",["77"],"export default[\r\n  {title1:\"대체하기(Substitute)\",\r\n  text1:\"대체하거나 변경하면? (예:쇠젓가락을 나무젓가락으로 변경)\",\r\n  title2:\"결합하기(Combine)\",\r\n  text2:\"두 부분을 결합하면? (예:지우개연필)\",\r\n  title3:\"응용하기(Adapt)\",\r\n  text3:\"응용해서 적용할 수 있는 부분은? (예:장미가시 응용-철조망 개발\",\r\n  title4:\"수정하기(Modify)\",\r\n  text4:\"크기,모양,색,효과 등을 바꾸면? (예:포스트잇)\",\r\n  title5:\"다른용도에 놓기(Put another use)\",\r\n  text5:\"다른 용도로 사용할 수 있는 부분은? (예:옥수수 연료)\",\r\n  title6:\"제거하기(Eliminate)\",\r\n  text6:\"부분을 삭제하거나 단순화 하면? (예:오픈카)\",\r\n  title7:\"뒤집기(Reverse)\",\r\n  text7:\"순서나 위치등을 뒤집으면? (예:누드김밥)\",\r\n  goodidea:\"좋은 아이디어 3가지\",\r\n  bestidea:\"가장 좋은 아이디어 1가지\",\r\n  plusidea:\"가장 좋은 아이디어의 긍정적인 부분은?\",\r\n  minusidea:\"가장 좋은 아이디어의 부벙적인 부분은?\",\r\n  funidea:\"가장 좋은 아이디어의 재미있는 부분은?\"\r\n},\r\n{title1:\"분할하기\",\r\n  text1:\"쪼개어 사용하면? (예:조립식가구,할부결제)\",\r\n  title2:\"추출하기\",\r\n  text2:\"필요한 부분만 뽑아내면? (예:김치냉장고,아웃소싱)\",\r\n  title3:\"높이맞추기\",\r\n  text3:\"사물을 작업하기 쉬운 위치에 맞추면? (예:문손잡이, 엘리베이터 버튼)\",\r\n  title4:\"곡선화하기\",\r\n  text4:\"직선을 곡선으로 바꾸면? (예:피자커팅칼)\",\r\n  title5:\"선행조치\",\r\n  text5:\"물체에 필요한 변화를 미리 준비하면? (예:에어컨필터,차량충돌구조)\",\r\n  title6:\"주기적작용\",\r\n  text6:\"연속적이 아닌 주기적으로 작용하게 하면? (예:신호등,인체감지조명)\",\r\n  title7:\"차원바꾸기\",\r\n  text7:\"1차원의 이동/배치를 2,3차원으로 바꾸면? (예:사다리차,스텐드진열)\",\r\n  goodidea:\"좋은 아이디어 3가지\",\r\n  bestidea:\"가장 좋은 아이디어 1가지\",\r\n  plusidea:\"가장 좋은 아이디어의 긍정적인 부분은?\",\r\n  minusidea:\"가장 좋은 아이디어의 부벙적인 부분은?\",\r\n  funidea:\"가장 좋은 아이디어의 재미있는 부분은?\"\r\n},\r\n]","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\ScamperReport.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":46,"column":6,"nodeType":"84","endLine":46,"endColumn":15,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":3,"column":101,"nodeType":"88","messageId":"89","endLine":3,"endColumn":123},{"ruleId":"86","severity":1,"message":"90","line":7,"column":27,"nodeType":"88","messageId":"89","endLine":7,"endColumn":35},{"ruleId":"86","severity":1,"message":"91","line":10,"column":8,"nodeType":"88","messageId":"89","endLine":10,"endColumn":13},{"ruleId":"86","severity":1,"message":"92","line":12,"column":21,"nodeType":"88","messageId":"89","endLine":12,"endColumn":33},{"ruleId":"86","severity":1,"message":"93","line":9,"column":8,"nodeType":"88","messageId":"89","endLine":9,"endColumn":12},{"ruleId":"86","severity":1,"message":"94","line":185,"column":11,"nodeType":"88","messageId":"89","endLine":185,"endColumn":18},{"ruleId":"86","severity":1,"message":"93","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","endLine":42,"endColumn":2},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggleDrawer2'. Either include it or remove the dependency array.","ArrayExpression",["100"],"no-unused-vars","'WbIncandescentOutlined' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'level' is assigned a value but never used.","'setTodoCount' is assigned a value but never used.","'Swal' is defined but never used.","'roomUid' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [fireApp, toggleDrawer2]",{"range":"103","text":"104"},[1745,1754],"[fireApp, toggleDrawer2]"]