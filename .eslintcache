[{"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\index.js":"1","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\firebase.js":"2","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\App.js":"3","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\loginModal\\LoginModal.jsx":"4","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\Scamper.jsx":"5","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\togo\\Togo.jsx":"6","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\authTable\\Atable.jsx":"7","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx":"8","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Todo.jsx":"9","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytool.jsx":"10","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx":"11","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\ScamperReport.jsx":"12","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Itemrow.jsx":"13","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Toolrow.jsx":"14","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\placeholder.js":"15"},{"size":521,"mtime":1610929896720,"results":"16","hashOfConfig":"17"},{"size":8593,"mtime":1612313112452,"results":"18","hashOfConfig":"17"},{"size":3780,"mtime":1612397495001,"results":"19","hashOfConfig":"17"},{"size":4435,"mtime":1611114560488,"results":"20","hashOfConfig":"17"},{"size":20028,"mtime":1612413302265,"results":"21","hashOfConfig":"17"},{"size":940,"mtime":1612137918502,"results":"22","hashOfConfig":"17"},{"size":7495,"mtime":1612313112415,"results":"23","hashOfConfig":"17"},{"size":5861,"mtime":1612397495030,"results":"24","hashOfConfig":"17"},{"size":2458,"mtime":1612397495157,"results":"25","hashOfConfig":"17"},{"size":2673,"mtime":1612397495087,"results":"26","hashOfConfig":"17"},{"size":925,"mtime":1612397495100,"results":"27","hashOfConfig":"17"},{"size":1748,"mtime":1612313112438,"results":"28","hashOfConfig":"17"},{"size":1483,"mtime":1612397495148,"results":"29","hashOfConfig":"17"},{"size":2015,"mtime":1612406311001,"results":"30","hashOfConfig":"17"},{"size":2268,"mtime":1612412424703,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"muhfwc",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\index.js",[],["66","67"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\firebase.js",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\App.js",["68"],"import { Avatar, Chip, Drawer, Tooltip } from '@material-ui/core';\r\nimport MenuSharpIcon from '@material-ui/icons/MenuSharp';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\r\nimport './App.css';\r\nimport LeftMenu from './component/leftMenu/LeftMenu';\r\nimport LoginModal from './component/loginModal/LoginModal';\r\nimport Todo from './component/todo/Todo';\r\nimport Togo from './component/togo/Togo';\r\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\r\nimport Scamper from './component/scamper/Scamper';\r\nimport Atable from './component/authTable/Atable';\r\nimport Mytool from './component/mytool/Mytool';\r\nimport Mytoolbox from './component/mytool/Mytoolbox';\r\n\r\n\r\nfunction App({ fireApp }) {\r\n  const history = useHistory();\r\n  const [user, setuser] = useState({});\r\n  const [uid, setUid] = useState('');\r\n  const [photo, setPhoto] = useState('');\r\n  const [userName, setUserName] = useState('');\r\n  //Drawer\r\n  const [state, setState] = useState({ top: false, left: false, right: false });\r\n  const toggleDrawer = (anchor, open) => (event) => setState({ ...state, [anchor]: open });\r\n  const toggleDrawer2 = (anchor, open) => setState({ ...state, [anchor]: open });\r\n\r\n  //로그아웃\r\n  const logout =  async() =>{\r\n   await fireApp.logout();\r\n   setuser({}); setUid(''); setPhoto('');setUserName('');\r\n   history.push('/')\r\n  } \r\n\r\n\r\n  // 로그인 싱크\r\n  useEffect(() => {\r\n     fireApp.onAuth((e) => {\r\n      const cf = {\r\n        f1: (e) => { setuser(e); setUid(e.uid); setPhoto(e.photoURL); setUserName(e.displayName);\r\n          toggleDrawer2('top', false) },\r\n        f2: () => { setuser({}); setUid(''); setPhoto('')}\r\n      }\r\n      e ? cf.f1(e) : cf.f2();\r\n    })\r\n  }, [fireApp]);\r\n\r\n  //본문\r\n  return (\r\n    <div className=\"App\"> \r\n      <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\r\n        <LeftMenu fireApp={fireApp} user={user} photo={photo} setPhoto={setPhoto} logout={logout} />\r\n      </Drawer>\r\n      <Drawer anchor={'top'} open={state['top']} onClose={toggleDrawer('top', false)}  >\r\n      {uid ? <Mytoolbox fireApp={fireApp} user={user} userName={userName} />\r\n           : <LoginModal fireApp={fireApp} setuser={setuser} />  }\r\n      </Drawer> \r\n      <header className=\"header\" >\r\n        <div className=\"btnmenu\">\r\n          <button onClick={toggleDrawer('left', true)}>\r\n            <MenuSharpIcon /></button>\r\n        </div>\r\n        <div className=\"headerT\">\r\n          <Link className=\"link\" to='/'>\r\n            SSAM <GpsFixedIcon style={{ fontSize: '25px' }} /> TOOL\r\n          </Link>\r\n        </div> \r\n        <div className=\"rightMenu\" >\r\n          {uid ? <Tooltip arrow title=\"My toolBox\">\r\n          <Chip size=\"small\" avatar={<Avatar src={photo} />} label={uid.substr(0,6)} as=\"button\"  onClick={toggleDrawer('top', true)}/>\r\n          </Tooltip> \r\n            : <button onClick={toggleDrawer('top', true)}> Login </button>}\r\n        </div>\r\n        \r\n      </header>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Togo />\r\n          </Route>\r\n          <Route path='/todo'>\r\n            <Todo fireApp={fireApp} user={user} userName={userName} />\r\n          </Route>\r\n          <Route path='/scamper'> \r\n            <Scamper fireApp={fireApp} user={user} userName={userName} />\r\n          </Route>\r\n          <Route path='/atable'> \r\n            <Atable fireApp={fireApp} user={user} userName={userName} />\r\n          </Route>\r\n          <Route path='/mytool'> \r\n            <Mytool fireApp={fireApp} user={user} userName={userName} />\r\n          </Route>\r\n          \r\n        </Switch>\r\n      </main>\r\n      <footer>토고팩토리</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\loginModal\\LoginModal.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\Scamper.jsx",["69","70","71","72","73","74","75"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\togo\\Togo.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\authTable\\Atable.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx",["76","77","78"],"import './leftMenu.css';\r\nimport { Avatar,  IconButton } from '@material-ui/core';\r\nimport { BatteryCharging20, BatteryCharging50, BatteryCharging80, BatteryChargingFull, PhotoCamera, WbIncandescentOutlined } from '@material-ui/icons';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport {  Link, useHistory } from 'react-router-dom';\r\nimport mime from 'mime-types';\r\nimport { Accordion, Card, Dropdown } from 'react-bootstrap';\r\n\r\nfunction LeftMenu({ fireApp, user, photo, setPhoto, logout }) {\r\nconst [level, setLevel] = useState(0);\r\n\r\nuseEffect(() => {\r\n  fireApp.onAuth((e) => {\r\n    if (e) {fireApp.authSync('auth',e.uid,(p)=>setLevel(p))}\r\n    else { console.log('no-User') }\r\n  })\r\n}) \r\n\r\n  const upLoad = (e) => {\r\n    const file = e.target.files[0];\r\n    const metaData = { contentType: mime.lookup(file.name) }\r\n    fireApp.imgUpload(user.uid, file, metaData, (e) => setPhoto(e));\r\n  }\r\n  const history = useHistory();\r\nconsole.log(user.uid)\r\n  return (\r\n    <div className=\"leftMenu\">\r\n\r\n      {photo ? <div className=\"imgBg\" style={{ backgroundImage: `url(\"${photo}\")` }} />\r\n        : <Avatar style={{ width: '120px', height: '120px' }} />}\r\n      {Object.keys(user).length>0 &&\r\n        <input accept=\"image/*\" style={{ display: 'none' }} id=\"photoFile\" type=\"file\" onChange={upLoad} />\r\n      }\r\n      <label htmlFor=\"photoFile\"> \r\n        <IconButton size=\"small\" component=\"span\"> <PhotoCamera /> </IconButton>\r\n      </label>\r\n      {user.uid&&<div style={{width:'100%'}}>\r\n        <button className=\"btnLogout\" onClick={logout} > 로그아웃 </button>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/\"><BatteryCharging20/> My Page</Link> </div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/todo\"><BatteryCharging20/> My Todo</Link></div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/mytool\"><BatteryCharging20/> My Tool</Link></div>\r\n        <div className=\"accordion Bmenu\"> <Link className=\"a\" to=\"/atable\"><BatteryCharging20/> My users</Link></div>\r\n      </div>}\r\n      <hr style={{width:'90%',border:'dashed 1px gray'}} />\r\n    \r\n      <div className=\"btntitle\" disabled > 디자인씽킹</div>\r\n\r\n        <Accordion  style={{width:'100%'}}>\r\n          <Card className={\"card\"}>\r\n            <Accordion.Toggle as={Card.Header} className=\"accordion\" eventKey=\"0\">\r\n            <BatteryCharging20/> 문제 찾기 \r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse  eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 관찰하기 </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 페르소나 </Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body  className=\"accordion  Amenu\" onClick={()=>{alert('hi')}} > - 5Why질문 </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"1\">\r\n            <BatteryCharging50/> 데이터 분석\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 유투브</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 상권분석</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 구글</Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"2\">\r\n            <BatteryCharging80/>  창의적발상\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 브레인스톰</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 만다라트</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" onClick={() => history.push('/scamper')}> - 스캠퍼</Card.Body>\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 트리즈</Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"3\">\r\n            <BatteryChargingFull/> 문제해결\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 프로토타입</Card.Body>\r\n            </Accordion.Collapse>            \r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header}  className=\"accordion\" eventKey=\"4\">\r\n            🚀 스타트업\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - SWOT분석</Card.Body>\r\n            </Accordion.Collapse>            \r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 식스분석</Card.Body>\r\n            </Accordion.Collapse>            \r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <Card.Body  className=\"accordion Amenu\" > - 린캔버스</Card.Body>\r\n            </Accordion.Collapse>            \r\n          </Card>\r\n        </Accordion>\r\n        \r\n        \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(LeftMenu);","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Todo.jsx",["79"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Itemrow from './Itemrow';\r\nimport './todo.css';\r\n\r\nfunction Todo({ fireApp, user, userName,  }) {\r\n\r\n  const today = new Date().toLocaleDateString();\r\n  const textRef = useRef();\r\n  const titleRef = useRef();\r\n  const rocketRef = useRef();\r\n  const [items, setItems] = useState({});\r\n  const [todoCount, setTodoCount] = useState(0);\r\n  const folder = \"todo\"\r\n  // 데이터 보여주기 싱크\r\n  useEffect(() => {    \r\n    fireApp.onAuth((e) => {\r\n    const cf = {\r\n      f1: (p)=>{setItems(p)},\r\n      f2: ()=>{setItems({})}\r\n      }\r\n   e ? fireApp.itemSync(folder,e.uid, cf):console.log('no-User')\r\n    })\r\n  }, [fireApp]);\r\n\r\n  //DB에 글 데이터 저장\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if(e.currentTarget == null){return;}\r\n    const text = textRef.current.value;\r\n    const title = titleRef.current.value;\r\n    if (userName && title) {\r\n    console.log(title)\r\n      const dataId = Date.now();\r\n      const data = {\r\n        uid: user.uid,\r\n        dataId: dataId,\r\n        name: userName,\r\n        title: title,\r\n        text: text,\r\n        today: today,\r\n        progress: 0\r\n      }\r\n      fireApp.itemSave(folder,data)\r\n    }\r\n    titleRef.current.value = '';\r\n    textRef.current.value = '';\r\n  }\r\n\r\n  //로켓발사\r\n  const rocketOn = () => {\r\n    rocketRef.current.classList.add(\"rocketOn\");\r\n    setTimeout(() => {\r\n      rocketRef.current.classList.remove(\"rocketOn\");\r\n      clearTimeout(rocketOn);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className='todo-header'> {userName} 오늘-할일 {todoCount}개</div>\r\n      <div className=\"todo-items\">\r\n        {\r\n          Object.keys(items).map((e) => {\r\n            return <Itemrow key={e} item={items[e]} fireApp={fireApp} />\r\n          })\r\n          // <Itemrow  key={uid} item={items} items={items}/> \r\n        }\r\n      </div>\r\n      <div className=\"todo-input\">\r\n        <form onSubmit={submit} className=\"todo-form\">\r\n          <input type=\"text\" ref={titleRef} className=\"inputTitle\" />\r\n          <button className=\"btnadd\" onClick={rocketOn} style={{ outline: \"none\", border: \"none\" }} >\r\n            <span className=\"rocket\" ref={rocketRef}  >🚀</span>  추가</button>\r\n          <textarea className=\"textarea\" ref={textRef} cols=\"30\" rows=\"3\" style={{resize: 'none'}} />\r\n        </form>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytool.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\ScamperReport.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\todo\\Itemrow.jsx",[],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\mytool\\Toolrow.jsx",["80"],"C:\\Users\\mrcau\\OneDrive\\문서\\GitHub\\togo2021\\src\\component\\scamper\\placeholder.js",["81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":46,"column":6,"nodeType":"88","endLine":46,"endColumn":15,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":34,"nodeType":"92","messageId":"93","endLine":3,"endColumn":41},{"ruleId":"90","severity":1,"message":"94","line":11,"column":8,"nodeType":"92","messageId":"93","endLine":11,"endColumn":12},{"ruleId":"86","severity":1,"message":"95","line":82,"column":5,"nodeType":"88","endLine":82,"endColumn":23,"suggestions":"96"},{"ruleId":"90","severity":1,"message":"97","line":88,"column":9,"nodeType":"92","messageId":"93","endLine":88,"endColumn":19},{"ruleId":"90","severity":1,"message":"98","line":92,"column":9,"nodeType":"92","messageId":"93","endLine":92,"endColumn":20},{"ruleId":"90","severity":1,"message":"99","line":128,"column":9,"nodeType":"92","messageId":"93","endLine":128,"endColumn":16},{"ruleId":"90","severity":1,"message":"100","line":161,"column":11,"nodeType":"92","messageId":"93","endLine":161,"endColumn":18},{"ruleId":"90","severity":1,"message":"101","line":3,"column":101,"nodeType":"92","messageId":"93","endLine":3,"endColumn":123},{"ruleId":"90","severity":1,"message":"102","line":7,"column":27,"nodeType":"92","messageId":"93","endLine":7,"endColumn":35},{"ruleId":"90","severity":1,"message":"103","line":10,"column":8,"nodeType":"92","messageId":"93","endLine":10,"endColumn":13},{"ruleId":"90","severity":1,"message":"104","line":12,"column":21,"nodeType":"92","messageId":"93","endLine":12,"endColumn":33},{"ruleId":"90","severity":1,"message":"94","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":12},{"ruleId":"105","severity":1,"message":"106","line":1,"column":1,"nodeType":"107","endLine":42,"endColumn":2},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggleDrawer2'. Either include it or remove the dependency array.","ArrayExpression",["110"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'Swal' is defined but never used.","React Hook useEffect has a missing dependency: 'report'. Either include it or remove the dependency array.",["111"],"'handleShow' is assigned a value but never used.","'handleShow2' is assigned a value but never used.","'videoUp' is assigned a value but never used.","'roomUid' is assigned a value but never used.","'WbIncandescentOutlined' is defined but never used.","'Dropdown' is defined but never used.","'level' is assigned a value but never used.","'setTodoCount' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [fireApp, toggleDrawer2]",{"range":"116","text":"117"},"Update the dependencies array to be: [roomName, fireApp, report]",{"range":"118","text":"119"},[1745,1754],"[fireApp, toggleDrawer2]",[2960,2978],"[roomName, fireApp, report]"]