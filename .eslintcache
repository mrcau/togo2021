[{"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\firebase.js":"2","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\App.js":"3","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\loginModal\\LoginModal.jsx":"4","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Todo.jsx":"5","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\authTable\\Atable.jsx":"6","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\togo\\Togo.jsx":"7","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx":"8","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\Scamper.jsx":"9","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Itemrow.jsx":"10","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\ScamperReport.jsx":"11","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytool.jsx":"12","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Toolrow.jsx":"13","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx":"14"},{"size":521,"mtime":1612167467961,"results":"15","hashOfConfig":"16"},{"size":8593,"mtime":1612295879187,"results":"17","hashOfConfig":"16"},{"size":3780,"mtime":1612393171247,"results":"18","hashOfConfig":"16"},{"size":4435,"mtime":1612167467954,"results":"19","hashOfConfig":"16"},{"size":2458,"mtime":1612358612341,"results":"20","hashOfConfig":"16"},{"size":7495,"mtime":1612261632302,"results":"21","hashOfConfig":"16"},{"size":940,"mtime":1612167467959,"results":"22","hashOfConfig":"16"},{"size":5861,"mtime":1612392524642,"results":"23","hashOfConfig":"16"},{"size":19526,"mtime":1612336561687,"results":"24","hashOfConfig":"16"},{"size":1483,"mtime":1612363989131,"results":"25","hashOfConfig":"16"},{"size":1748,"mtime":1612260127330,"results":"26","hashOfConfig":"16"},{"size":2673,"mtime":1612391172485,"results":"27","hashOfConfig":"16"},{"size":1951,"mtime":1612393898452,"results":"28","hashOfConfig":"16"},{"size":925,"mtime":1612386323748,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"pytjxg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\index.js",[],["61","62"],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\firebase.js",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\App.js",["63"],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\loginModal\\LoginModal.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Todo.jsx",["64"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Itemrow from './Itemrow';\r\nimport './todo.css';\r\n\r\nfunction Todo({ fireApp, user, userName,  }) {\r\n\r\n  const today = new Date().toLocaleDateString();\r\n  const textRef = useRef();\r\n  const titleRef = useRef();\r\n  const rocketRef = useRef();\r\n  const [items, setItems] = useState({});\r\n  const [todoCount, setTodoCount] = useState(0);\r\n  const folder = \"todo\"\r\n  // 데이터 보여주기 싱크\r\n  useEffect(() => {    \r\n    fireApp.onAuth((e) => {\r\n    const cf = {\r\n      f1: (p)=>{setItems(p)},\r\n      f2: ()=>{setItems({})}\r\n      }\r\n   e ? fireApp.itemSync(folder,e.uid, cf):console.log('no-User')\r\n    })\r\n  }, [fireApp]);\r\n\r\n  //DB에 글 데이터 저장\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if(e.currentTarget == null){return;}\r\n    const text = textRef.current.value;\r\n    const title = titleRef.current.value;\r\n    if (userName && title) {\r\n    console.log(title)\r\n      const dataId = Date.now();\r\n      const data = {\r\n        uid: user.uid,\r\n        dataId: dataId,\r\n        name: userName,\r\n        title: title,\r\n        text: text,\r\n        today: today,\r\n        progress: 0\r\n      }\r\n      fireApp.itemSave(folder,data)\r\n    }\r\n    titleRef.current.value = '';\r\n    textRef.current.value = '';\r\n  }\r\n\r\n  //로켓발사\r\n  const rocketOn = () => {\r\n    rocketRef.current.classList.add(\"rocketOn\");\r\n    setTimeout(() => {\r\n      rocketRef.current.classList.remove(\"rocketOn\");\r\n      clearTimeout(rocketOn);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className='todo-header'> {userName} 오늘-할일 {todoCount}개</div>\r\n      <div className=\"todo-items\">\r\n        {\r\n          Object.keys(items).map((e) => {\r\n            return <Itemrow key={e} item={items[e]} fireApp={fireApp} />\r\n          })\r\n          // <Itemrow  key={uid} item={items} items={items}/> \r\n        }\r\n      </div>\r\n      <div className=\"todo-input\">\r\n        <form onSubmit={submit} className=\"todo-form\">\r\n          <input type=\"text\" ref={titleRef} className=\"inputTitle\" />\r\n          <button className=\"btnadd\" onClick={rocketOn} style={{ outline: \"none\", border: \"none\" }} >\r\n            <span className=\"rocket\" ref={rocketRef}  >🚀</span>  추가</button>\r\n          <textarea className=\"textarea\" ref={textRef} cols=\"30\" rows=\"3\" style={{resize: 'none'}} />\r\n        </form>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\authTable\\Atable.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\togo\\Togo.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\leftMenu\\LeftMenu.jsx",["65","66","67"],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\Scamper.jsx",["68","69","70","71","72"],"import { Badge, IconButton, Switch } from '@material-ui/core';\r\nimport {  DeleteForever,   MenuSharp, ThumbUp } from '@material-ui/icons';\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport './scamper.css';\r\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\r\nimport ScamperReport from './ScamperReport';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction Scamper({ fireApp, user, userName }) {\r\n  const folder = \"scamper\";\r\n  const roomSubstr = 6;\r\n  const Swal = require('sweetalert2');\r\n\r\n  const aTitle = useRef();\r\n  const bName = useRef();\r\n  const dContent = useRef();\r\n  const scamperS = useRef();\r\n  const scamperC = useRef();\r\n  const scamperA = useRef();\r\n  const scamperM = useRef();\r\n  const scamperP = useRef();\r\n  const scamperE = useRef();\r\n  const scamperR = useRef();\r\n  const roomERef = useRef();\r\n  const formRef = useRef();\r\n  const videoRef = useRef();\r\n  const noticeRef = useRef();\r\n  const titleRef = useRef();\r\n\r\n  const [data, setdata] = useState({});\r\n  const [room, setRoom] = useState({});\r\n  const [roomName, setroomName] = useState('');\r\n  const [roomUid, setRoomUid] = useState('');\r\n  const [level, setLevel] = useState(0);\r\n  const [video, setVideo] = useState('');\r\n  const [notice, setNotice] = useState('');\r\n  //오른쪽 report 메뉴\r\n  // const [state, setState] = useState({ top: false, left: false, right: false });\r\n  // const [Selection, setSelection] = useState('');\r\n    // const toggleDrawer = (anchor, open) => (event) => setState({ ...state, [anchor]: open });\r\n  \r\n   //데이터싱크 \r\n  useEffect(() => {\r\n    fireApp.onAuth((e) => {\r\n      const cf = {\r\n        f1: (p) => { setdata(p) },\r\n        f2: () => { setdata({}) },\r\n        f3: (p) => { setRoom(p) },\r\n        f4: () => { setRoom({}) },\r\n      }\r\n      if (e) {\r\n        const roomUid = e.uid.substr(0, roomSubstr);\r\n        setRoomUid(e.uid.substr(0, roomSubstr));\r\n        fireApp.dataSync(folder, roomName, cf);\r\n        fireApp.roomSync(folder, roomUid, cf);\r\n        fireApp.authSync('auth',e.uid,(p)=>setLevel(p))\r\n      }\r\n      else { console.log('no-User') }\r\n    })\r\n  }, [roomName,fireApp]);\r\n  \r\n  //비로그인자 데이터 싱크 - 애니메이션\r\n  useEffect(() => {\r\n    if(roomName&&!report){ \r\n      fireApp.videoSync(folder,roomName,'See',(p)=>{setVideo(p); })\r\n      fireApp.videoSync(folder,roomName,'Tok',(p)=>{\r\n        setNotice(p); \r\n        if(noticeRef.current.value){\r\n        titleRef.current.classList.add(\"noticeFly\");\r\n        setTimeout(()=>{titleRef.current.classList.remove(\"noticeFly\")},1000)\r\n        }\r\n      })\r\n     }\r\n  },[roomName,fireApp]);\r\n\r\n\r\n    //모달창\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  //모달창2\r\n  const [show2, setShow2] = useState(false);\r\n  const handleClose2 = () => setShow2(false);\r\n  const handleShow2 = () => setShow2(true);\r\n  //모달창3\r\n  const fire = () => {Swal.fire({html:video, width:'90%'})}\r\n  // 자료입력 모달\r\n  const fireInsert = async(e)=>{\r\n    e.preventDefault();\r\n    const { value: text } = await Swal.fire({\r\n      input: 'textarea',\r\n      inputLabel: '참고자료',\r\n      inputPlaceholder: '이곳에 자료를 입력해주세요.',\r\n      inputAttributes: {'aria-label': 'Type your message here'},\r\n      showCancelButton: true\r\n    })\r\n    if (text) {\r\n      Swal.fire(text)\r\n    fireApp.videoSave(folder, user.uid,'See', text);\r\n    }\r\n  }\r\n  //입장중\r\n  const [door, setDoor] = useState('입장')\r\n  const [report, setReport] = useState(false);\r\n\r\n  let good =[data.good0,data.good1,data.good2,data.good3,data.good4,\r\n            data.good5,data.good6,data.good7]\r\n\r\n  // 방생성\r\n  const createRoom = () => {\r\n    const num = Date.now().toString().substr(9);\r\n    const newRoom = roomUid + num;\r\n    setroomName(newRoom);\r\n    const data = {scamS:'',scamC:'',scamA:'',scamM:'',scamP:'',scamE:'',scamR:'',aTitle:'',bName: '',dContent: '', \r\n                  good0:0, good1:0, good2:0, good3:0, good4:0, good5:0, good6:0, good7:0,}\r\n    const roomget = fireApp.roomGet(folder,roomUid)\r\n    roomget < 8 && fireApp.roomSave(folder, newRoom, data)\r\n  }\r\n// 동영상 주소 저장\r\n  const videoUp = (e) => {\r\n    e.preventDefault();\r\n    const data = videoRef.current.value;\r\n    fireApp.videoSave(folder, user.uid,'See', data)\r\n  }\r\n// notice 저장 - 공지 보내기\r\n  const noticeUp = (e) => {\r\n    e.preventDefault();\r\n    const data = noticeRef.current.value;\r\n    fireApp.videoSave(folder, user.uid,'Tok', data)\r\n    noticeRef.current.value='';\r\n    \r\n    // titleRef.current.classList.add(\"noticeFly\");\r\n    // setTimeout(() => {\r\n    //   titleRef.current.classList.remove(\"noticeFly\");\r\n    //   clearTimeout(noticeUp);\r\n    // }, 1000);\r\n  }\r\n  //scamper 글 데이터 저장, 방개수 6개 이하일때만 데이터 저장\r\n  const onSubmit = () => {\r\n    if (roomName!==roomERef.current.value||roomERef.current.value===''||report) { return }\r\n    const data = {\r\n      aTitle: aTitle.current.value || '',\r\n      bName: bName.current.value || '',\r\n      dContent: dContent.current.value || '',\r\n      scamS: scamperS.current.value || '',\r\n      scamC: scamperC.current.value || '',\r\n      scamA: scamperA.current.value || '',\r\n      scamM: scamperM.current.value || '',\r\n      scamP: scamperP.current.value || '',\r\n      scamE: scamperE.current.value || '',\r\n      scamR: scamperR.current.value || '',\r\n    }\r\n    \r\n    const roomUid =  roomERef.current.value.substr(0,roomSubstr)\r\n    const roomget = fireApp.roomGet(folder,roomUid)\r\n    roomget < 10 &&  fireApp.dataUp(folder, roomName, data)\r\n  }\r\n\r\n   // 보고서 제출\r\n   const btnInput = (e) => {\r\n    e.preventDefault();\r\n    const today = new Date().toLocaleDateString().substr(5);\r\n    // const id = Date.now();\r\n    if (roomName!==roomERef.current.value||roomERef.current.value==='') { return }\r\n    const data = {\r\n      aTitle: aTitle.current.value || '',\r\n      bName: bName.current.value || '',\r\n      cDate : today,\r\n      dContent: dContent.current.value || '',\r\n      roomName: roomERef.current.value || '',\r\n      scamS: scamperS.current.value || '',\r\n      scamC: scamperC.current.value || '',\r\n      scamA: scamperA.current.value || '',\r\n      scamM: scamperM.current.value || '',\r\n      scamP: scamperP.current.value || '',\r\n      scamE: scamperE.current.value || '',\r\n      scamR: scamperR.current.value || '',\r\n      good7:0\r\n    }\r\n    const roomUid =  roomERef.current.value.substr(0,roomSubstr);\r\n    const roomId = roomUid+'REPORT';\r\n    fireApp.reportSave(folder, roomId, roomName, data);\r\n  }\r\n  // input roomName 초기화\r\n  const roomNameReset=() => {roomERef.current.value=''; }\r\n\r\n  // roomName.substr(0,6) 방입장\r\n    const enterRoom = () => {\r\n    const roomUid =  roomERef.current.value.substr(0,roomSubstr)\r\n    const currentRoom = roomERef.current.value;\r\n    const roomGet=()=>{\r\n      if(roomERef.current.value.length === 10){\r\n       setroomName(currentRoom);\r\n       setDoor('입장중');\r\n       setReport(false);\r\n      }}\r\n      const cf = {\r\n        f1: (p) => { setdata(p) },\r\n        f2: () => { setdata({}) },\r\n        f3: (p) => { setRoom(p) },\r\n        f4: () => { setRoom({}) },\r\n      }\r\n\r\n    fireApp.roomUser(folder,roomUid,roomGet);\r\n    fireApp.dataSync(folder, currentRoom, cf);\r\n    }\r\n\r\n  // 관리자 방입장\r\n  const adminEnter = (e) => {\r\n    const room = e.currentTarget.textContent;\r\n    const roomname = roomUid +room\r\n    setroomName(roomUid +room)\r\n    roomERef.current.value =roomname;     \r\n  }\r\n\r\n  //스위치\r\n  const [state, setState] = useState({ checkedA:true,  checkedB:true });\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  // Input 초기화\r\n  // const inputReset = () => {   \r\n  //   const data = {\r\n  //     scamS: scamperS.current.value = '',\r\n  //     scamC: scamperC.current.value = '',\r\n  //     scamA: scamperA.current.value = '',\r\n  //     scamM: scamperM.current.value = '',\r\n  //     scamP: scamperP.current.value = '',\r\n  //     scamE: scamperE.current.value = '',\r\n  //     scamR: scamperR.current.value = '',\r\n  //   }\r\n  //   fireApp.dataUp(folder, roomName, data)\r\n  // }\r\n\r\n // 아이템 삭제\r\n  const dataDel = () => {\r\n    if (roomName!==roomERef.current.value||roomERef.current.value==='') { return }\r\n    fireApp.dataDel(folder,roomName);        \r\n    aTitle.current.value = '';\r\n    bName.current.value = '';\r\n    dContent.current.value = '';\r\n    roomERef.current.value = '';\r\n    scamperS.current.value = '';\r\n    scamperC.current.value = '';\r\n    scamperA.current.value = '';\r\n    scamperM.current.value = '';\r\n    scamperP.current.value = '';\r\n    scamperE.current.value = '';\r\n    scamperR.current.value = '';\r\n  }\r\n  // 좋아요\r\n  const [Switch0, setSwitch0] = useState(true);\r\n  const [Switch1, setSwitch1] = useState(true);\r\n  const [Switch2, setSwitch2] = useState(true);\r\n  const [Switch3, setSwitch3] = useState(true);\r\n  const [Switch4, setSwitch4] = useState(true);\r\n  const [Switch5, setSwitch5] = useState(true);\r\n  const [Switch6, setSwitch6] = useState(true);\r\n  const [Switch7, setSwitch7] = useState(true);\r\n\r\n  const goodPlus = (i,goodNum,Switch,setSwitch) => {\r\n    if(roomName){\r\n    Switch ? data[goodNum]++ : data[goodNum]--;\r\n    setSwitch(!Switch);\r\n    fireApp.goodUp(folder, roomName,goodNum,data[goodNum]);\r\n    }\r\n  }\r\n  const goodPlus2 = (i,goodNum,Switch,setSwitch) => {\r\n    if(roomName){\r\n    Switch ? data[goodNum]++ : data[goodNum]--;\r\n    setSwitch(!Switch); setReport(true);\r\n    fireApp.goodUp(folder, roomName,goodNum,data[goodNum]);\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"scamper\" >      \r\n      {/* <Drawer anchor={'right'} open={state['right']} onClose={toggleDrawer('right', false)}>\r\n        <ScamperReport fireApp={fireApp} user={user} folder={folder} roomName={roomName} toggleDrawer={toggleDrawer} /> \r\n      </Drawer>  */}\r\n\r\n    {/* 동영상 모달 */}\r\n      <Modal show={show} onHide={handleClose} animation={true} size={'xl'}  dialogClassName=\"videoModal\"> \r\n        <h5 style={{background:'var(--Acolor)',color:'var(--Bcolor)'}}>\r\n          <VideocamIcon/>\r\n        </h5>\r\n        <div className=\"modalMain\">\r\n        {video \r\n        ? <iframe width=\"100%\" height=\"400\" src ={video} title=\"video\" frameBorder=\"0\" />\r\n        : '연결된 자료가 없습니다.'  \r\n        }\r\n        \r\n        </div>\r\n        <button onClick={handleClose} style={{fontSize:'large'}}> Close </button>           \r\n      </Modal>\r\n\r\n    {/* 게시판 모달 */}\r\n    \r\n      <Modal show={show2} onHide={handleClose2} animation={true} bsPrefix={'modal'} size={'100px'} dialogClassName=\"modal\" centered={true}>\r\n        <div className=\"totalmodal\">\r\n        <h5 style={{background:'var(--Acolor)',color:'var(--Bcolor)'}}>\r\n         게시판\r\n        </h5>\r\n        <div className=\"modalMain\">\r\n         <ScamperReport fireApp={fireApp} user={user} folder={folder} setroomName={setroomName} roomNameReset={roomNameReset}\r\n         roomName={roomName} handleClose2={handleClose2} setReport={setReport} setSwitch7={setSwitch7} setDoor={setDoor} /> \r\n        </div>\r\n        <button onClick={handleClose2} style={{fontSize:'large'}}> Close </button>      \r\n        </div>     \r\n      </Modal>\r\n      \r\n      {level>0 && \r\n        <form className=\"adimBar\">\r\n          <button className=\"enterBtn\"  onClick={noticeUp}><AddCommentIcon/></button> \r\n          <input type=\"text\" className=\"enterInput\" placeholder=\"공지사항\" ref={noticeRef} />\r\n          <button className=\"enterBtn\"  style={{width:'30px'}} onClick={fireInsert}><YouTubeIcon/></button> \r\n          {/* <input type=\"text\" className=\"enterInput\" placeholder=\"동영상링크\" ref = {videoRef} /> */}\r\n        </form>\r\n      }\r\n      {level>0 &&\r\n        <div className=\"adimBar\">\r\n          <div> <button className=\"enterBtn\" onClick={createRoom} style={{fontSize:'12px'}}>개설</button> </div>\r\n          <div className=\"enterNumber\" style={{fontSize:'small'}}>{room && Object.keys(room).map((e) =>\r\n              <button key={e} className=\"btnRoom\" onClick={adminEnter} >{e}</button>) }\r\n          </div>\r\n        </div>\r\n      }\r\n      <div className=\"s-header\">\r\n        <div className=\"enterWrap\" >\r\n          <button className=\"enterBtn\" onClick={enterRoom} style={{fontSize:'12px'}} >{door}</button>\r\n          <input type=\"text\" className=\"enterInput roomnum\" placeholder=\"방번호\" style={{width:'85px'}} ref={roomERef} />\r\n        </div>\r\n        {level>0 && <button className=\"btnRoomDel\" style={{margin:'0'}} onClick={dataDel}><DeleteForever /></button>  }\r\n\r\n          {/* scamper/Triz */}\r\n        <div className=\"enterTitle\" >\r\n          <span style={{fontSize:'14px',fontWeight:'900'}}>SCAMPER </span>\r\n          <Switch checked={state.checkedA} onChange={handleChange} size=\"small\" name=\"checkedA\" \r\n          color=\"default\" />  \r\n          <span style={{fontSize:'14px',fontWeight:'900'}}> TRIZ</span>\r\n        </div>    \r\n\r\n        <div style={{ width: '100px',display:'flex',justifyContent:'flex-end' }}>             \r\n          <button style={{width:'30px'}}  onClick={fire}>\r\n             <VoiceChatIcon fontSize='small' />\r\n          </button>\r\n          <button style={{width:'30px'}} onClick={fireInsert}> \r\n            <MenuSharp />\r\n          </button> \r\n        </div>        \r\n      </div>\r\n\r\n        {/* <div className=\"noticeTitle\" > 공지 </div> */}\r\n      <div className=\"s-header noticeHeader\" ref={titleRef}>\r\n        <div className=\"enterTitle\" >{notice}</div>  \r\n      </div>\r\n      \r\n\r\n        <form className=\"s-items\" ref={formRef} >\r\n          \r\n          \r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\" sty>S \r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[0]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(0,'good0',Switch0,setSwitch0)} />\r\n              </Badge>            \r\n            </IconButton> }\r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperS}  onChange={onSubmit} value={data.scamS} />\r\n          </div>\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">C\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[1]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(1,'good1',Switch1,setSwitch1)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperC} onChange={onSubmit} value={data.scamC} />\r\n          </div>\r\n        \r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">A\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[2]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(2,'good2',Switch2,setSwitch2)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperA} onChange={onSubmit} value={data.scamA} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">M\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[3]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(3,'good3',Switch3,setSwitch3)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperM} onChange={onSubmit} value={data.scamM} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">P\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[4]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(4,'good4',Switch4,setSwitch4)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperP} onChange={onSubmit} value={data.scamP} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">E\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[5]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(5,'good5',Switch5,setSwitch5)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\"  \r\n            ref={scamperE} onChange={onSubmit} value={data.scamE} />\r\n          </div>\r\n\r\n          <div className=\"s-item\">\r\n            <div className=\"s-itemTitle\">R\r\n            {!report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[6]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus(6,'good6',Switch6,setSwitch6)} />\r\n              </Badge>\r\n            </IconButton>} \r\n            </div>\r\n            <textarea  className=\"s-intemInput input1\" cols=\"30\" rows=\"2\" style={{resize: 'none'}} \r\n            ref={scamperR} onChange={onSubmit} value={data.scamR} />\r\n          </div>\r\n          \r\n          <div className=\"inputBox\" >\r\n            <div className=\"s-itemTitle\" style={{width:\"100%\"}}>보고서\r\n            {report &&\r\n            <IconButton style={{width:'25px', height:'25px'}} >\r\n              <Badge badgeContent={good[7]} color=\"secondary\" style={{paddingRight:'10px'}}>\r\n                <ThumbUp style={{color:'var(--Bcolor)'}} onClick={()=>goodPlus2(7,'good7',Switch7,setSwitch7)} />\r\n              </Badge>\r\n            </IconButton> \r\n            }\r\n            </div>\r\n            <div></div>\r\n            <textarea cols=\"30\" rows=\"1\" className=\"scamperInput input1\" ref={aTitle} \r\n            onChange={onSubmit} value={data.aTitle} placeholder=\"제목\" />\r\n            <textarea cols=\"30\" rows=\"1\" className=\"scamperInput input2\" ref={bName} \r\n            onChange={onSubmit} value={data.bName} placeholder=\"작성자\" />\r\n            <textarea cols=\"30\" rows=\"2\" className=\"scamperInput input3\" ref={dContent} \r\n            onChange={onSubmit} value={data.dContent} placeholder=\"내용\" />\r\n            <input type=\"button\" className=\"scamperInput btn\" onClick={btnInput} value=\"제출\"/>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default memo(Scamper);","C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\todo\\Itemrow.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\scamper\\ScamperReport.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytool.jsx",[],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Toolrow.jsx",["73"],"C:\\Users\\User\\Desktop\\Coding\\togo2021\\src\\component\\mytool\\Mytoolbox.jsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":46,"column":6,"nodeType":"80","endLine":46,"endColumn":15,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":12,"column":21,"nodeType":"84","messageId":"85","endLine":12,"endColumn":33},{"ruleId":"82","severity":1,"message":"86","line":3,"column":101,"nodeType":"84","messageId":"85","endLine":3,"endColumn":123},{"ruleId":"82","severity":1,"message":"87","line":7,"column":27,"nodeType":"84","messageId":"85","endLine":7,"endColumn":35},{"ruleId":"82","severity":1,"message":"88","line":10,"column":8,"nodeType":"84","messageId":"85","endLine":10,"endColumn":13},{"ruleId":"82","severity":1,"message":"89","line":11,"column":8,"nodeType":"84","messageId":"85","endLine":11,"endColumn":12},{"ruleId":"78","severity":1,"message":"90","line":78,"column":5,"nodeType":"80","endLine":78,"endColumn":23,"suggestions":"91"},{"ruleId":"82","severity":1,"message":"92","line":84,"column":9,"nodeType":"84","messageId":"85","endLine":84,"endColumn":19},{"ruleId":"82","severity":1,"message":"93","line":88,"column":9,"nodeType":"84","messageId":"85","endLine":88,"endColumn":20},{"ruleId":"82","severity":1,"message":"94","line":124,"column":9,"nodeType":"84","messageId":"85","endLine":124,"endColumn":16},{"ruleId":"82","severity":1,"message":"89","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":12},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggleDrawer2'. Either include it or remove the dependency array.","ArrayExpression",["97"],"no-unused-vars","'setTodoCount' is assigned a value but never used.","Identifier","unusedVar","'WbIncandescentOutlined' is defined but never used.","'Dropdown' is defined but never used.","'level' is assigned a value but never used.","'Swal' is defined but never used.","React Hook useEffect has a missing dependency: 'report'. Either include it or remove the dependency array.",["98"],"'handleShow' is assigned a value but never used.","'handleShow2' is assigned a value but never used.","'videoUp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [fireApp, toggleDrawer2]",{"range":"103","text":"104"},"Update the dependencies array to be: [roomName, fireApp, report]",{"range":"105","text":"106"},[1745,1754],"[fireApp, toggleDrawer2]",[2771,2789],"[roomName, fireApp, report]"]